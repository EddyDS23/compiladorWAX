
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQEQNOTEQLTLEGTGEleftPLUSMINUSleftSTARSLASHAND BOOL BOOL COLON COMMA COMMENT_BLOCK COMMENT_LINE DOUBLE ELSE EQEQ EQUAL FUNCTION GE GT IDENT IF INPUT INT LBRACE LBRACKET LE LPAREN LT MINUS NOTEQ OR PLUS PRINT RBRACE RBRACKET RETURN RPAREN SEMI SLASH STAR STR STRING VOID WAX WHILEprogram : program statement\n               | statement\n               | emptystatement : COMMENT_LINE\n                 | COMMENT_BLOCKstatement : WAX IDENT COLON IDENT EQUAL expression SEMIstatement : IDENT EQUAL expression SEMIstatement : ident_list EQUAL expression_list SEMIstatement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                 | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE program RBRACEstatement : PRINT LPAREN expression RPAREN SEMIreturn_type : IDENT\n                   | VOIDstatement : RETURN expression_list SEMIstatement : RETURN SEMIstatement : WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression SLASH expressionexpression : expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQEQ expression\n                  | expression NOTEQ expressionexpression : expression AND expression\n                  | expression OR expressionexpression : LPAREN expression RPARENexpression : INT\n                  | DOUBLEexpression : STRINGexpression : BOOLexpression : IDENTexpression : LBRACKET list_items RBRACKETlist_items : list_items COMMA expression\n                  | expression\n                  | emptyexpression : IDENT LBRACKET expression RBRACKETexpression : IDENT LPAREN arglist RPARENexpression : STR LPAREN expression RPARENexpression : INPUT LPAREN RPARENarglist : arglist COMMA expression\n               | expression\n               | emptyexpression_list : expression_list COMMA expression\n                       | expressionident_list : ident_list COMMA IDENT\n                  | IDENTparamlist : paramlist COMMA IDENT COLON IDENT\n                 | IDENT COLON IDENT\n                 | emptyempty :'
    
_lr_action_items = {'COMMENT_LINE':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[4,4,-2,-3,-4,-5,-1,-16,-15,-7,-8,4,4,-12,4,4,-6,-9,-11,4,4,4,4,-17,-10,]),'COMMENT_BLOCK':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[5,5,-2,-3,-4,-5,-1,-16,-15,-7,-8,5,5,-12,5,5,-6,-9,-11,5,5,5,5,-17,-10,]),'WAX':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[6,6,-2,-3,-4,-5,-1,-16,-15,-7,-8,6,6,-12,6,6,-6,-9,-11,6,6,6,6,-17,-10,]),'IDENT':([0,1,2,3,4,5,6,12,13,15,16,17,18,19,20,21,23,25,31,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,65,66,67,90,93,97,98,99,102,106,107,108,110,114,115,116,118,121,123,124,125,126,127,129,],[7,7,-2,-3,-4,-5,14,30,-1,35,30,30,38,30,30,30,-16,30,30,64,-15,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,94,-7,-8,30,30,7,7,-12,30,111,7,7,-6,-9,-11,120,122,7,7,7,128,7,-17,-10,]),'IF':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[9,9,-2,-3,-4,-5,-1,-16,-15,-7,-8,9,9,-12,9,9,-6,-9,-11,9,9,9,9,-17,-10,]),'WHILE':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[10,10,-2,-3,-4,-5,-1,-16,-15,-7,-8,10,10,-12,10,10,-6,-9,-11,10,10,10,10,-17,-10,]),'PRINT':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[11,11,-2,-3,-4,-5,-1,-16,-15,-7,-8,11,11,-12,11,11,-6,-9,-11,11,11,11,11,-17,-10,]),'RETURN':([0,1,2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[12,12,-2,-3,-4,-5,-1,-16,-15,-7,-8,12,12,-12,12,12,-6,-9,-11,12,12,12,12,-17,-10,]),'$end':([0,1,2,3,4,5,13,23,42,66,67,99,110,114,115,127,129,],[-54,0,-2,-3,-4,-5,-1,-16,-15,-7,-8,-12,-6,-9,-11,-17,-10,]),'RBRACE':([2,3,4,5,13,23,42,66,67,97,98,99,107,108,110,114,115,121,123,124,126,127,129,],[-2,-3,-4,-5,-1,-16,-15,-7,-8,-54,-54,-12,114,115,-6,-9,-11,-54,-54,127,129,-17,-10,]),'FUNCTION':([6,],[15,]),'EQUAL':([7,8,38,64,],[16,17,-49,93,]),'COMMA':([7,8,22,24,26,27,28,29,30,31,37,38,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,92,100,101,103,104,106,109,112,113,120,128,],[-50,18,43,-48,-31,-32,-33,-34,-35,-54,43,-49,-54,90,-38,-39,-47,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,102,-45,-46,-36,-43,-40,-41,-37,-42,-54,-44,118,-53,-52,-51,]),'LPAREN':([9,10,11,12,16,17,19,20,21,25,30,31,32,33,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,94,95,96,102,],[19,20,21,25,25,25,25,25,25,25,58,25,62,63,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-13,106,-14,25,]),'SEMI':([12,22,24,26,27,28,29,30,36,37,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,92,100,101,104,105,],[23,42,-48,-31,-32,-33,-34,-35,66,67,99,-47,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-36,-43,-40,-41,-42,110,]),'INT':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DOUBLE':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BOOL':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LBRACKET':([12,16,17,19,20,21,25,30,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[31,31,31,31,31,31,31,57,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STR':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'INPUT':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COLON':([14,35,111,122,],[34,65,116,125,]),'PLUS':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[44,-31,-32,-33,-34,-35,44,44,44,44,44,44,44,-18,-19,-20,-21,44,44,44,44,44,44,44,44,-30,44,44,-36,44,-43,-40,-41,44,-42,44,44,]),'MINUS':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[45,-31,-32,-33,-34,-35,45,45,45,45,45,45,45,-18,-19,-20,-21,45,45,45,45,45,45,45,45,-30,45,45,-36,45,-43,-40,-41,45,-42,45,45,]),'STAR':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[46,-31,-32,-33,-34,-35,46,46,46,46,46,46,46,46,46,-20,-21,46,46,46,46,46,46,46,46,-30,46,46,-36,46,-43,-40,-41,46,-42,46,46,]),'SLASH':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[47,-31,-32,-33,-34,-35,47,47,47,47,47,47,47,47,47,-20,-21,47,47,47,47,47,47,47,47,-30,47,47,-36,47,-43,-40,-41,47,-42,47,47,]),'LT':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[48,-31,-32,-33,-34,-35,48,48,48,48,48,48,48,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,48,48,-30,48,48,-36,48,-43,-40,-41,48,-42,48,48,]),'LE':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[49,-31,-32,-33,-34,-35,49,49,49,49,49,49,49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,49,49,-30,49,49,-36,49,-43,-40,-41,49,-42,49,49,]),'GT':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[50,-31,-32,-33,-34,-35,50,50,50,50,50,50,50,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,50,50,-30,50,50,-36,50,-43,-40,-41,50,-42,50,50,]),'GE':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[51,-31,-32,-33,-34,-35,51,51,51,51,51,51,51,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,51,51,-30,51,51,-36,51,-43,-40,-41,51,-42,51,51,]),'EQEQ':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[52,-31,-32,-33,-34,-35,52,52,52,52,52,52,52,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,52,52,-30,52,52,-36,52,-43,-40,-41,52,-42,52,52,]),'NOTEQ':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[53,-31,-32,-33,-34,-35,53,53,53,53,53,53,53,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,53,53,-30,53,53,-36,53,-43,-40,-41,53,-42,53,53,]),'AND':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[54,-31,-32,-33,-34,-35,54,54,54,54,54,54,54,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,54,-30,54,54,-36,54,-43,-40,-41,54,-42,54,54,]),'OR':([24,26,27,28,29,30,36,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,91,92,100,101,103,104,105,109,],[55,-31,-32,-33,-34,-35,55,55,55,55,55,55,55,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,55,55,-36,55,-43,-40,-41,55,-42,55,55,]),'RPAREN':([26,27,28,29,30,39,40,41,56,58,63,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,91,92,100,101,104,106,109,112,113,120,128,],[-31,-32,-33,-34,-35,68,69,70,84,-54,92,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,101,-45,-46,-36,104,-43,-40,-41,-42,-54,-44,117,-53,-52,-51,]),'RBRACKET':([26,27,28,29,30,31,59,60,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,100,101,103,104,],[-31,-32,-33,-34,-35,-54,89,-38,-39,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,100,-36,-43,-40,-41,-37,-42,]),'VOID':([65,],[96,]),'LBRACE':([68,69,117,119,],[97,98,121,123,]),'ELSE':([114,],[119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,97,98,121,123,],[1,107,108,124,126,]),'statement':([0,1,97,98,107,108,121,123,124,126,],[2,13,2,2,13,13,2,2,13,13,]),'empty':([0,31,58,97,98,106,121,123,],[3,61,88,3,3,113,3,3,]),'ident_list':([0,1,97,98,107,108,121,123,124,126,],[8,8,8,8,8,8,8,8,8,8,]),'expression_list':([12,17,],[22,37,]),'expression':([12,16,17,19,20,21,25,31,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,62,90,93,102,],[24,36,24,39,40,41,56,60,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,91,103,105,109,]),'list_items':([31,],[59,]),'arglist':([58,],[86,]),'return_type':([65,],[95,]),'paramlist':([106,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','parser.py',24),
  ('program -> statement','program',1,'p_program','parser.py',25),
  ('program -> empty','program',1,'p_program','parser.py',26),
  ('statement -> COMMENT_LINE','statement',1,'p_statement_comment','parser.py',39),
  ('statement -> COMMENT_BLOCK','statement',1,'p_statement_comment','parser.py',40),
  ('statement -> WAX IDENT COLON IDENT EQUAL expression SEMI','statement',7,'p_statement_decl','parser.py',44),
  ('statement -> IDENT EQUAL expression SEMI','statement',4,'p_statement_assignment','parser.py',50),
  ('statement -> ident_list EQUAL expression_list SEMI','statement',4,'p_statement_multi_assignment','parser.py',55),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement_if','parser.py',59),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','statement',11,'p_statement_if','parser.py',60),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_statement_while','parser.py',67),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','parser.py',71),
  ('return_type -> IDENT','return_type',1,'p_return_type','parser.py',75),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',76),
  ('statement -> RETURN expression_list SEMI','statement',3,'p_statement_return_value','parser.py',80),
  ('statement -> RETURN SEMI','statement',2,'p_statement_return_empty','parser.py',84),
  ('statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE','statement',11,'p_statement_func','parser.py',88),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',94),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',95),
  ('expression -> expression STAR expression','expression',3,'p_expression_binop','parser.py',96),
  ('expression -> expression SLASH expression','expression',3,'p_expression_binop','parser.py',97),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','parser.py',101),
  ('expression -> expression LE expression','expression',3,'p_expression_comparison','parser.py',102),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','parser.py',103),
  ('expression -> expression GE expression','expression',3,'p_expression_comparison','parser.py',104),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_comparison','parser.py',105),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_comparison','parser.py',106),
  ('expression -> expression AND expression','expression',3,'p_expression_logic','parser.py',110),
  ('expression -> expression OR expression','expression',3,'p_expression_logic','parser.py',111),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',115),
  ('expression -> INT','expression',1,'p_expression_number','parser.py',119),
  ('expression -> DOUBLE','expression',1,'p_expression_number','parser.py',120),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',125),
  ('expression -> BOOL','expression',1,'p_expression_bool','parser.py',129),
  ('expression -> IDENT','expression',1,'p_expression_ident','parser.py',133),
  ('expression -> LBRACKET list_items RBRACKET','expression',3,'p_expression_list','parser.py',137),
  ('list_items -> list_items COMMA expression','list_items',3,'p_list_items','parser.py',141),
  ('list_items -> expression','list_items',1,'p_list_items','parser.py',142),
  ('list_items -> empty','list_items',1,'p_list_items','parser.py',143),
  ('expression -> IDENT LBRACKET expression RBRACKET','expression',4,'p_expression_list_access','parser.py',148),
  ('expression -> IDENT LPAREN arglist RPAREN','expression',4,'p_expression_func_call','parser.py',152),
  ('expression -> STR LPAREN expression RPAREN','expression',4,'p_expression_str_call','parser.py',157),
  ('expression -> INPUT LPAREN RPAREN','expression',3,'p_expression_input','parser.py',161),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','parser.py',166),
  ('arglist -> expression','arglist',1,'p_arglist','parser.py',167),
  ('arglist -> empty','arglist',1,'p_arglist','parser.py',168),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_values','parser.py',173),
  ('expression_list -> expression','expression_list',1,'p_expression_list_values','parser.py',174),
  ('ident_list -> ident_list COMMA IDENT','ident_list',3,'p_ident_list','parser.py',179),
  ('ident_list -> IDENT','ident_list',1,'p_ident_list','parser.py',180),
  ('paramlist -> paramlist COMMA IDENT COLON IDENT','paramlist',5,'p_paramlist','parser.py',185),
  ('paramlist -> IDENT COLON IDENT','paramlist',3,'p_paramlist','parser.py',186),
  ('paramlist -> empty','paramlist',1,'p_paramlist','parser.py',187),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',198),
]
