Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     statement -> COMMENT_LINE
Rule 5     statement -> COMMENT_BLOCK
Rule 6     statement -> WAX IDENT COLON IDENT EQUAL expression SEMI
Rule 7     statement -> IDENT EQUAL expression SEMI
Rule 8     statement -> IDENT PLUSEQ expression SEMI
Rule 9     statement -> IDENT MINUSEQ expression SEMI
Rule 10    statement -> IDENT STAREQ expression SEMI
Rule 11    statement -> IDENT SLASHEQ expression SEMI
Rule 12    statement -> IDENT PLUSPLUS SEMI
Rule 13    statement -> IDENT MINUSMINUS SEMI
Rule 14    statement -> PLUSPLUS IDENT SEMI
Rule 15    statement -> MINUSMINUS IDENT SEMI
Rule 16    statement -> ident_list EQUAL expression_list SEMI
Rule 17    statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI
Rule 18    statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI
Rule 19    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 20    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 21    statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
Rule 22    for_increment -> IDENT PLUSPLUS
Rule 23    for_increment -> IDENT MINUSMINUS
Rule 24    for_increment -> PLUSPLUS IDENT
Rule 25    for_increment -> MINUSMINUS IDENT
Rule 26    for_increment -> IDENT PLUSEQ expression
Rule 27    for_increment -> IDENT MINUSEQ expression
Rule 28    for_increment -> IDENT STAREQ expression
Rule 29    for_increment -> IDENT SLASHEQ expression
Rule 30    for_increment -> IDENT EQUAL expression
Rule 31    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 32    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 33    return_type -> IDENT
Rule 34    return_type -> VOID
Rule 35    statement -> RETURN expression_list SEMI
Rule 36    statement -> RETURN SEMI
Rule 37    statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
Rule 38    statement -> expression SEMI
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression STAR expression
Rule 42    expression -> expression SLASH expression
Rule 43    expression -> expression LT expression
Rule 44    expression -> expression LE expression
Rule 45    expression -> expression GT expression
Rule 46    expression -> expression GE expression
Rule 47    expression -> expression EQEQ expression
Rule 48    expression -> expression NOTEQ expression
Rule 49    expression -> expression AND expression
Rule 50    expression -> expression OR expression
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> INT
Rule 53    expression -> DOUBLE
Rule 54    expression -> STRING
Rule 55    expression -> BOOL
Rule 56    expression -> NOT expression
Rule 57    expression -> MINUS expression
Rule 58    expression -> IDENT
Rule 59    expression -> LBRACKET list_items RBRACKET
Rule 60    list_items -> list_items COMMA expression
Rule 61    list_items -> expression
Rule 62    list_items -> empty
Rule 63    expression -> IDENT LBRACKET expression RBRACKET
Rule 64    expression -> IDENT LPAREN arglist RPAREN
Rule 65    expression -> STR LPAREN expression RPAREN
Rule 66    expression -> INPUT LPAREN RPAREN
Rule 67    expression -> INPUT LPAREN expression RPAREN
Rule 68    arglist -> arglist COMMA expression
Rule 69    arglist -> expression
Rule 70    arglist -> empty
Rule 71    expression_list -> expression_list COMMA expression
Rule 72    expression_list -> expression
Rule 73    ident_list -> ident_list COMMA IDENT
Rule 74    ident_list -> IDENT
Rule 75    paramlist -> paramlist COMMA IDENT COLON IDENT
Rule 76    paramlist -> IDENT COLON IDENT
Rule 77    paramlist -> empty
Rule 78    empty -> <empty>

Terminals, with rules where they appear

AND                  : 49
APPEND               : 17
BOOL                 : 55
COLON                : 6 21 37 75 76
COMMA                : 60 68 71 73 75
COMMENT_BLOCK        : 5
COMMENT_LINE         : 4
DOT                  : 17 18
DOUBLE               : 53
ELSE                 : 20
EQEQ                 : 47
EQUAL                : 6 7 16 21 30
FOR                  : 21
FUNCTION             : 37
GE                   : 46
GT                   : 45
IDENT                : 6 6 7 8 9 10 11 12 13 14 15 17 18 21 21 22 23 24 25 26 27 28 29 30 33 37 58 63 64 73 74 75 75 76 76
IF                   : 19 20
INPUT                : 66 67
INT                  : 52
LBRACE               : 19 20 20 21 31 37
LBRACKET             : 59 63
LE                   : 44
LPAREN               : 17 18 19 20 21 31 32 37 51 64 65 66 67
LT                   : 43
MINUS                : 40 57
MINUSEQ              : 9 27
MINUSMINUS           : 13 15 23 25
NOT                  : 56
NOTEQ                : 48
OR                   : 50
PLUS                 : 39
PLUSEQ               : 8 26
PLUSPLUS             : 12 14 22 24
PRINT                : 32
RBRACE               : 19 20 20 21 31 37
RBRACKET             : 59 63
REMOVE               : 18
RETURN               : 35 36
RPAREN               : 17 18 19 20 21 31 32 37 51 64 65 66 67
SEMI                 : 6 7 8 9 10 11 12 13 14 15 16 17 18 21 21 32 35 36 38
SLASH                : 42
SLASHEQ              : 11 29
STAR                 : 41
STAREQ               : 10 28
STR                  : 65
STRING               : 54
VOID                 : 34
WAX                  : 6 21 37
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

arglist              : 64 68
empty                : 3 62 70 77
expression           : 6 7 8 9 10 11 17 18 19 20 21 21 26 27 28 29 30 31 32 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 56 57 60 61 63 65 67 68 69 71 72
expression_list      : 16 35 71
for_increment        : 21
ident_list           : 16 73
list_items           : 59 60
paramlist            : 37 75
program              : 1 19 20 20 21 31 37 0
return_type          : 37
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    $end            reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    expression                     shift and go to state 8
    ident_list                     shift and go to state 11

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 8
    ident_list                     shift and go to state 11

state 2

    (2) program -> statement .

    COMMENT_LINE    reduce using rule 2 (program -> statement .)
    COMMENT_BLOCK   reduce using rule 2 (program -> statement .)
    WAX             reduce using rule 2 (program -> statement .)
    IDENT           reduce using rule 2 (program -> statement .)
    PLUSPLUS        reduce using rule 2 (program -> statement .)
    MINUSMINUS      reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    FOR             reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    PRINT           reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    LPAREN          reduce using rule 2 (program -> statement .)
    INT             reduce using rule 2 (program -> statement .)
    DOUBLE          reduce using rule 2 (program -> statement .)
    STRING          reduce using rule 2 (program -> statement .)
    BOOL            reduce using rule 2 (program -> statement .)
    NOT             reduce using rule 2 (program -> statement .)
    MINUS           reduce using rule 2 (program -> statement .)
    LBRACKET        reduce using rule 2 (program -> statement .)
    STR             reduce using rule 2 (program -> statement .)
    INPUT           reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)


state 3

    (3) program -> empty .

    COMMENT_LINE    reduce using rule 3 (program -> empty .)
    COMMENT_BLOCK   reduce using rule 3 (program -> empty .)
    WAX             reduce using rule 3 (program -> empty .)
    IDENT           reduce using rule 3 (program -> empty .)
    PLUSPLUS        reduce using rule 3 (program -> empty .)
    MINUSMINUS      reduce using rule 3 (program -> empty .)
    IF              reduce using rule 3 (program -> empty .)
    FOR             reduce using rule 3 (program -> empty .)
    WHILE           reduce using rule 3 (program -> empty .)
    PRINT           reduce using rule 3 (program -> empty .)
    RETURN          reduce using rule 3 (program -> empty .)
    LPAREN          reduce using rule 3 (program -> empty .)
    INT             reduce using rule 3 (program -> empty .)
    DOUBLE          reduce using rule 3 (program -> empty .)
    STRING          reduce using rule 3 (program -> empty .)
    BOOL            reduce using rule 3 (program -> empty .)
    NOT             reduce using rule 3 (program -> empty .)
    MINUS           reduce using rule 3 (program -> empty .)
    LBRACKET        reduce using rule 3 (program -> empty .)
    STR             reduce using rule 3 (program -> empty .)
    INPUT           reduce using rule 3 (program -> empty .)
    $end            reduce using rule 3 (program -> empty .)
    RBRACE          reduce using rule 3 (program -> empty .)


state 4

    (4) statement -> COMMENT_LINE .

    COMMENT_LINE    reduce using rule 4 (statement -> COMMENT_LINE .)
    COMMENT_BLOCK   reduce using rule 4 (statement -> COMMENT_LINE .)
    WAX             reduce using rule 4 (statement -> COMMENT_LINE .)
    IDENT           reduce using rule 4 (statement -> COMMENT_LINE .)
    PLUSPLUS        reduce using rule 4 (statement -> COMMENT_LINE .)
    MINUSMINUS      reduce using rule 4 (statement -> COMMENT_LINE .)
    IF              reduce using rule 4 (statement -> COMMENT_LINE .)
    FOR             reduce using rule 4 (statement -> COMMENT_LINE .)
    WHILE           reduce using rule 4 (statement -> COMMENT_LINE .)
    PRINT           reduce using rule 4 (statement -> COMMENT_LINE .)
    RETURN          reduce using rule 4 (statement -> COMMENT_LINE .)
    LPAREN          reduce using rule 4 (statement -> COMMENT_LINE .)
    INT             reduce using rule 4 (statement -> COMMENT_LINE .)
    DOUBLE          reduce using rule 4 (statement -> COMMENT_LINE .)
    STRING          reduce using rule 4 (statement -> COMMENT_LINE .)
    BOOL            reduce using rule 4 (statement -> COMMENT_LINE .)
    NOT             reduce using rule 4 (statement -> COMMENT_LINE .)
    MINUS           reduce using rule 4 (statement -> COMMENT_LINE .)
    LBRACKET        reduce using rule 4 (statement -> COMMENT_LINE .)
    STR             reduce using rule 4 (statement -> COMMENT_LINE .)
    INPUT           reduce using rule 4 (statement -> COMMENT_LINE .)
    $end            reduce using rule 4 (statement -> COMMENT_LINE .)
    RBRACE          reduce using rule 4 (statement -> COMMENT_LINE .)


state 5

    (5) statement -> COMMENT_BLOCK .

    COMMENT_LINE    reduce using rule 5 (statement -> COMMENT_BLOCK .)
    COMMENT_BLOCK   reduce using rule 5 (statement -> COMMENT_BLOCK .)
    WAX             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    IDENT           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    PLUSPLUS        reduce using rule 5 (statement -> COMMENT_BLOCK .)
    MINUSMINUS      reduce using rule 5 (statement -> COMMENT_BLOCK .)
    IF              reduce using rule 5 (statement -> COMMENT_BLOCK .)
    FOR             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    WHILE           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    PRINT           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    RETURN          reduce using rule 5 (statement -> COMMENT_BLOCK .)
    LPAREN          reduce using rule 5 (statement -> COMMENT_BLOCK .)
    INT             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    DOUBLE          reduce using rule 5 (statement -> COMMENT_BLOCK .)
    STRING          reduce using rule 5 (statement -> COMMENT_BLOCK .)
    BOOL            reduce using rule 5 (statement -> COMMENT_BLOCK .)
    NOT             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    MINUS           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    LBRACKET        reduce using rule 5 (statement -> COMMENT_BLOCK .)
    STR             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    INPUT           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    $end            reduce using rule 5 (statement -> COMMENT_BLOCK .)
    RBRACE          reduce using rule 5 (statement -> COMMENT_BLOCK .)


state 6

    (6) statement -> WAX . IDENT COLON IDENT EQUAL expression SEMI
    (37) statement -> WAX . FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 28
    FUNCTION        shift and go to state 29


state 7

    (7) statement -> IDENT . EQUAL expression SEMI
    (8) statement -> IDENT . PLUSEQ expression SEMI
    (9) statement -> IDENT . MINUSEQ expression SEMI
    (10) statement -> IDENT . STAREQ expression SEMI
    (11) statement -> IDENT . SLASHEQ expression SEMI
    (12) statement -> IDENT . PLUSPLUS SEMI
    (13) statement -> IDENT . MINUSMINUS SEMI
    (17) statement -> IDENT . DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> IDENT . DOT REMOVE LPAREN expression RPAREN SEMI
    (74) ident_list -> IDENT .
    (58) expression -> IDENT .
    (63) expression -> IDENT . LBRACKET expression RBRACKET
    (64) expression -> IDENT . LPAREN arglist RPAREN

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 30
    PLUSEQ          shift and go to state 31
    MINUSEQ         shift and go to state 32
    STAREQ          shift and go to state 33
    SLASHEQ         shift and go to state 34
    PLUSPLUS        shift and go to state 35
    MINUSMINUS      shift and go to state 36
    DOT             shift and go to state 37
    COMMA           reduce using rule 74 (ident_list -> IDENT .)
    SEMI            reduce using rule 58 (expression -> IDENT .)
    PLUS            reduce using rule 58 (expression -> IDENT .)
    MINUS           reduce using rule 58 (expression -> IDENT .)
    STAR            reduce using rule 58 (expression -> IDENT .)
    SLASH           reduce using rule 58 (expression -> IDENT .)
    LT              reduce using rule 58 (expression -> IDENT .)
    LE              reduce using rule 58 (expression -> IDENT .)
    GT              reduce using rule 58 (expression -> IDENT .)
    GE              reduce using rule 58 (expression -> IDENT .)
    EQEQ            reduce using rule 58 (expression -> IDENT .)
    NOTEQ           reduce using rule 58 (expression -> IDENT .)
    AND             reduce using rule 58 (expression -> IDENT .)
    OR              reduce using rule 58 (expression -> IDENT .)
    LBRACKET        shift and go to state 39
    LPAREN          shift and go to state 38

  ! EQUAL           [ reduce using rule 74 (ident_list -> IDENT .) ]


state 8

    (38) statement -> expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 9

    (14) statement -> PLUSPLUS . IDENT SEMI

    IDENT           shift and go to state 53


state 10

    (15) statement -> MINUSMINUS . IDENT SEMI

    IDENT           shift and go to state 54


state 11

    (16) statement -> ident_list . EQUAL expression_list SEMI
    (73) ident_list -> ident_list . COMMA IDENT

    EQUAL           shift and go to state 55
    COMMA           shift and go to state 56


state 12

    (51) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 57

state 13

    (19) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 59


state 14

    (21) statement -> FOR . LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 60


state 15

    (31) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 61


state 16

    (32) statement -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 62


state 17

    (35) statement -> RETURN . expression_list SEMI
    (36) statement -> RETURN . SEMI
    (71) expression_list -> . expression_list COMMA expression
    (72) expression_list -> . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    SEMI            shift and go to state 64
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression_list                shift and go to state 63
    expression                     shift and go to state 65

state 18

    (57) expression -> MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 66

state 19

    (52) expression -> INT .

    SEMI            reduce using rule 52 (expression -> INT .)
    PLUS            reduce using rule 52 (expression -> INT .)
    MINUS           reduce using rule 52 (expression -> INT .)
    STAR            reduce using rule 52 (expression -> INT .)
    SLASH           reduce using rule 52 (expression -> INT .)
    LT              reduce using rule 52 (expression -> INT .)
    LE              reduce using rule 52 (expression -> INT .)
    GT              reduce using rule 52 (expression -> INT .)
    GE              reduce using rule 52 (expression -> INT .)
    EQEQ            reduce using rule 52 (expression -> INT .)
    NOTEQ           reduce using rule 52 (expression -> INT .)
    AND             reduce using rule 52 (expression -> INT .)
    OR              reduce using rule 52 (expression -> INT .)
    RPAREN          reduce using rule 52 (expression -> INT .)
    COMMA           reduce using rule 52 (expression -> INT .)
    RBRACKET        reduce using rule 52 (expression -> INT .)


state 20

    (53) expression -> DOUBLE .

    SEMI            reduce using rule 53 (expression -> DOUBLE .)
    PLUS            reduce using rule 53 (expression -> DOUBLE .)
    MINUS           reduce using rule 53 (expression -> DOUBLE .)
    STAR            reduce using rule 53 (expression -> DOUBLE .)
    SLASH           reduce using rule 53 (expression -> DOUBLE .)
    LT              reduce using rule 53 (expression -> DOUBLE .)
    LE              reduce using rule 53 (expression -> DOUBLE .)
    GT              reduce using rule 53 (expression -> DOUBLE .)
    GE              reduce using rule 53 (expression -> DOUBLE .)
    EQEQ            reduce using rule 53 (expression -> DOUBLE .)
    NOTEQ           reduce using rule 53 (expression -> DOUBLE .)
    AND             reduce using rule 53 (expression -> DOUBLE .)
    OR              reduce using rule 53 (expression -> DOUBLE .)
    RPAREN          reduce using rule 53 (expression -> DOUBLE .)
    COMMA           reduce using rule 53 (expression -> DOUBLE .)
    RBRACKET        reduce using rule 53 (expression -> DOUBLE .)


state 21

    (54) expression -> STRING .

    SEMI            reduce using rule 54 (expression -> STRING .)
    PLUS            reduce using rule 54 (expression -> STRING .)
    MINUS           reduce using rule 54 (expression -> STRING .)
    STAR            reduce using rule 54 (expression -> STRING .)
    SLASH           reduce using rule 54 (expression -> STRING .)
    LT              reduce using rule 54 (expression -> STRING .)
    LE              reduce using rule 54 (expression -> STRING .)
    GT              reduce using rule 54 (expression -> STRING .)
    GE              reduce using rule 54 (expression -> STRING .)
    EQEQ            reduce using rule 54 (expression -> STRING .)
    NOTEQ           reduce using rule 54 (expression -> STRING .)
    AND             reduce using rule 54 (expression -> STRING .)
    OR              reduce using rule 54 (expression -> STRING .)
    RPAREN          reduce using rule 54 (expression -> STRING .)
    COMMA           reduce using rule 54 (expression -> STRING .)
    RBRACKET        reduce using rule 54 (expression -> STRING .)


state 22

    (55) expression -> BOOL .

    SEMI            reduce using rule 55 (expression -> BOOL .)
    PLUS            reduce using rule 55 (expression -> BOOL .)
    MINUS           reduce using rule 55 (expression -> BOOL .)
    STAR            reduce using rule 55 (expression -> BOOL .)
    SLASH           reduce using rule 55 (expression -> BOOL .)
    LT              reduce using rule 55 (expression -> BOOL .)
    LE              reduce using rule 55 (expression -> BOOL .)
    GT              reduce using rule 55 (expression -> BOOL .)
    GE              reduce using rule 55 (expression -> BOOL .)
    EQEQ            reduce using rule 55 (expression -> BOOL .)
    NOTEQ           reduce using rule 55 (expression -> BOOL .)
    AND             reduce using rule 55 (expression -> BOOL .)
    OR              reduce using rule 55 (expression -> BOOL .)
    RPAREN          reduce using rule 55 (expression -> BOOL .)
    COMMA           reduce using rule 55 (expression -> BOOL .)
    RBRACKET        reduce using rule 55 (expression -> BOOL .)


state 23

    (56) expression -> NOT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 67

state 24

    (59) expression -> LBRACKET . list_items RBRACKET
    (60) list_items -> . list_items COMMA expression
    (61) list_items -> . expression
    (62) list_items -> . empty
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN
    (78) empty -> .

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26
    RBRACKET        reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)

    list_items                     shift and go to state 68
    expression                     shift and go to state 69
    empty                          shift and go to state 70

state 25

    (65) expression -> STR . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 26

    (66) expression -> INPUT . LPAREN RPAREN
    (67) expression -> INPUT . LPAREN expression RPAREN

    LPAREN          shift and go to state 72


state 27

    (1) program -> program statement .

    COMMENT_LINE    reduce using rule 1 (program -> program statement .)
    COMMENT_BLOCK   reduce using rule 1 (program -> program statement .)
    WAX             reduce using rule 1 (program -> program statement .)
    IDENT           reduce using rule 1 (program -> program statement .)
    PLUSPLUS        reduce using rule 1 (program -> program statement .)
    MINUSMINUS      reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    FOR             reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    PRINT           reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    LPAREN          reduce using rule 1 (program -> program statement .)
    INT             reduce using rule 1 (program -> program statement .)
    DOUBLE          reduce using rule 1 (program -> program statement .)
    STRING          reduce using rule 1 (program -> program statement .)
    BOOL            reduce using rule 1 (program -> program statement .)
    NOT             reduce using rule 1 (program -> program statement .)
    MINUS           reduce using rule 1 (program -> program statement .)
    LBRACKET        reduce using rule 1 (program -> program statement .)
    STR             reduce using rule 1 (program -> program statement .)
    INPUT           reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)


state 28

    (6) statement -> WAX IDENT . COLON IDENT EQUAL expression SEMI

    COLON           shift and go to state 73


state 29

    (37) statement -> WAX FUNCTION . IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 74


state 30

    (7) statement -> IDENT EQUAL . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 75

state 31

    (8) statement -> IDENT PLUSEQ . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 76

state 32

    (9) statement -> IDENT MINUSEQ . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 77

state 33

    (10) statement -> IDENT STAREQ . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 78

state 34

    (11) statement -> IDENT SLASHEQ . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 79

state 35

    (12) statement -> IDENT PLUSPLUS . SEMI

    SEMI            shift and go to state 80


state 36

    (13) statement -> IDENT MINUSMINUS . SEMI

    SEMI            shift and go to state 81


state 37

    (17) statement -> IDENT DOT . APPEND LPAREN expression RPAREN SEMI
    (18) statement -> IDENT DOT . REMOVE LPAREN expression RPAREN SEMI

    APPEND          shift and go to state 82
    REMOVE          shift and go to state 83


state 38

    (64) expression -> IDENT LPAREN . arglist RPAREN
    (68) arglist -> . arglist COMMA expression
    (69) arglist -> . expression
    (70) arglist -> . empty
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN
    (78) empty -> .

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26
    RPAREN          reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)

    arglist                        shift and go to state 84
    expression                     shift and go to state 85
    empty                          shift and go to state 86

state 39

    (63) expression -> IDENT LBRACKET . expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 87

state 40

    (38) statement -> expression SEMI .

    COMMENT_LINE    reduce using rule 38 (statement -> expression SEMI .)
    COMMENT_BLOCK   reduce using rule 38 (statement -> expression SEMI .)
    WAX             reduce using rule 38 (statement -> expression SEMI .)
    IDENT           reduce using rule 38 (statement -> expression SEMI .)
    PLUSPLUS        reduce using rule 38 (statement -> expression SEMI .)
    MINUSMINUS      reduce using rule 38 (statement -> expression SEMI .)
    IF              reduce using rule 38 (statement -> expression SEMI .)
    FOR             reduce using rule 38 (statement -> expression SEMI .)
    WHILE           reduce using rule 38 (statement -> expression SEMI .)
    PRINT           reduce using rule 38 (statement -> expression SEMI .)
    RETURN          reduce using rule 38 (statement -> expression SEMI .)
    LPAREN          reduce using rule 38 (statement -> expression SEMI .)
    INT             reduce using rule 38 (statement -> expression SEMI .)
    DOUBLE          reduce using rule 38 (statement -> expression SEMI .)
    STRING          reduce using rule 38 (statement -> expression SEMI .)
    BOOL            reduce using rule 38 (statement -> expression SEMI .)
    NOT             reduce using rule 38 (statement -> expression SEMI .)
    MINUS           reduce using rule 38 (statement -> expression SEMI .)
    LBRACKET        reduce using rule 38 (statement -> expression SEMI .)
    STR             reduce using rule 38 (statement -> expression SEMI .)
    INPUT           reduce using rule 38 (statement -> expression SEMI .)
    $end            reduce using rule 38 (statement -> expression SEMI .)
    RBRACE          reduce using rule 38 (statement -> expression SEMI .)


state 41

    (39) expression -> expression PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 88

state 42

    (40) expression -> expression MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 89

state 43

    (41) expression -> expression STAR . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 90

state 44

    (42) expression -> expression SLASH . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 91

state 45

    (43) expression -> expression LT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 92

state 46

    (44) expression -> expression LE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 93

state 47

    (45) expression -> expression GT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 94

state 48

    (46) expression -> expression GE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 95

state 49

    (47) expression -> expression EQEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 96

state 50

    (48) expression -> expression NOTEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 97

state 51

    (49) expression -> expression AND . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 98

state 52

    (50) expression -> expression OR . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 99

state 53

    (14) statement -> PLUSPLUS IDENT . SEMI

    SEMI            shift and go to state 100


state 54

    (15) statement -> MINUSMINUS IDENT . SEMI

    SEMI            shift and go to state 101


state 55

    (16) statement -> ident_list EQUAL . expression_list SEMI
    (71) expression_list -> . expression_list COMMA expression
    (72) expression_list -> . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression_list                shift and go to state 102
    expression                     shift and go to state 65

state 56

    (73) ident_list -> ident_list COMMA . IDENT

    IDENT           shift and go to state 103


state 57

    (51) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 58

    (58) expression -> IDENT .
    (63) expression -> IDENT . LBRACKET expression RBRACKET
    (64) expression -> IDENT . LPAREN arglist RPAREN

    RPAREN          reduce using rule 58 (expression -> IDENT .)
    PLUS            reduce using rule 58 (expression -> IDENT .)
    MINUS           reduce using rule 58 (expression -> IDENT .)
    STAR            reduce using rule 58 (expression -> IDENT .)
    SLASH           reduce using rule 58 (expression -> IDENT .)
    LT              reduce using rule 58 (expression -> IDENT .)
    LE              reduce using rule 58 (expression -> IDENT .)
    GT              reduce using rule 58 (expression -> IDENT .)
    GE              reduce using rule 58 (expression -> IDENT .)
    EQEQ            reduce using rule 58 (expression -> IDENT .)
    NOTEQ           reduce using rule 58 (expression -> IDENT .)
    AND             reduce using rule 58 (expression -> IDENT .)
    OR              reduce using rule 58 (expression -> IDENT .)
    SEMI            reduce using rule 58 (expression -> IDENT .)
    COMMA           reduce using rule 58 (expression -> IDENT .)
    RBRACKET        reduce using rule 58 (expression -> IDENT .)
    LBRACKET        shift and go to state 39
    LPAREN          shift and go to state 38


state 59

    (19) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (20) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 105

state 60

    (21) statement -> FOR LPAREN . WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    WAX             shift and go to state 106


state 61

    (31) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 107

state 62

    (32) statement -> PRINT LPAREN . expression RPAREN SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 108

state 63

    (35) statement -> RETURN expression_list . SEMI
    (71) expression_list -> expression_list . COMMA expression

    SEMI            shift and go to state 109
    COMMA           shift and go to state 110


state 64

    (36) statement -> RETURN SEMI .

    COMMENT_LINE    reduce using rule 36 (statement -> RETURN SEMI .)
    COMMENT_BLOCK   reduce using rule 36 (statement -> RETURN SEMI .)
    WAX             reduce using rule 36 (statement -> RETURN SEMI .)
    IDENT           reduce using rule 36 (statement -> RETURN SEMI .)
    PLUSPLUS        reduce using rule 36 (statement -> RETURN SEMI .)
    MINUSMINUS      reduce using rule 36 (statement -> RETURN SEMI .)
    IF              reduce using rule 36 (statement -> RETURN SEMI .)
    FOR             reduce using rule 36 (statement -> RETURN SEMI .)
    WHILE           reduce using rule 36 (statement -> RETURN SEMI .)
    PRINT           reduce using rule 36 (statement -> RETURN SEMI .)
    RETURN          reduce using rule 36 (statement -> RETURN SEMI .)
    LPAREN          reduce using rule 36 (statement -> RETURN SEMI .)
    INT             reduce using rule 36 (statement -> RETURN SEMI .)
    DOUBLE          reduce using rule 36 (statement -> RETURN SEMI .)
    STRING          reduce using rule 36 (statement -> RETURN SEMI .)
    BOOL            reduce using rule 36 (statement -> RETURN SEMI .)
    NOT             reduce using rule 36 (statement -> RETURN SEMI .)
    MINUS           reduce using rule 36 (statement -> RETURN SEMI .)
    LBRACKET        reduce using rule 36 (statement -> RETURN SEMI .)
    STR             reduce using rule 36 (statement -> RETURN SEMI .)
    INPUT           reduce using rule 36 (statement -> RETURN SEMI .)
    $end            reduce using rule 36 (statement -> RETURN SEMI .)
    RBRACE          reduce using rule 36 (statement -> RETURN SEMI .)


state 65

    (72) expression_list -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 72 (expression_list -> expression .)
    COMMA           reduce using rule 72 (expression_list -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 66

    (57) expression -> MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 57 (expression -> MINUS expression .)
    AND             reduce using rule 57 (expression -> MINUS expression .)
    OR              reduce using rule 57 (expression -> MINUS expression .)
    RPAREN          reduce using rule 57 (expression -> MINUS expression .)
    COMMA           reduce using rule 57 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 57 (expression -> MINUS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50

  ! PLUS            [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! STAR            [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! SLASH           [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! LT              [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! LE              [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! GT              [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! GE              [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! EQEQ            [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! NOTEQ           [ reduce using rule 57 (expression -> MINUS expression .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 67

    (56) expression -> NOT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 56 (expression -> NOT expression .)
    AND             reduce using rule 56 (expression -> NOT expression .)
    OR              reduce using rule 56 (expression -> NOT expression .)
    RPAREN          reduce using rule 56 (expression -> NOT expression .)
    COMMA           reduce using rule 56 (expression -> NOT expression .)
    RBRACKET        reduce using rule 56 (expression -> NOT expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50

  ! PLUS            [ reduce using rule 56 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> NOT expression .) ]
  ! STAR            [ reduce using rule 56 (expression -> NOT expression .) ]
  ! SLASH           [ reduce using rule 56 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 56 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 56 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 56 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 56 (expression -> NOT expression .) ]
  ! EQEQ            [ reduce using rule 56 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 56 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 68

    (59) expression -> LBRACKET list_items . RBRACKET
    (60) list_items -> list_items . COMMA expression

    RBRACKET        shift and go to state 111
    COMMA           shift and go to state 112


state 69

    (61) list_items -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RBRACKET        reduce using rule 61 (list_items -> expression .)
    COMMA           reduce using rule 61 (list_items -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 70

    (62) list_items -> empty .

    RBRACKET        reduce using rule 62 (list_items -> empty .)
    COMMA           reduce using rule 62 (list_items -> empty .)


state 71

    (65) expression -> STR LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 113

state 72

    (66) expression -> INPUT LPAREN . RPAREN
    (67) expression -> INPUT LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RPAREN          shift and go to state 114
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 115

state 73

    (6) statement -> WAX IDENT COLON . IDENT EQUAL expression SEMI

    IDENT           shift and go to state 116


state 74

    (37) statement -> WAX FUNCTION IDENT . COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    COLON           shift and go to state 117


state 75

    (7) statement -> IDENT EQUAL expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 118
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 76

    (8) statement -> IDENT PLUSEQ expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 119
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 77

    (9) statement -> IDENT MINUSEQ expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 120
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 78

    (10) statement -> IDENT STAREQ expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 121
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 79

    (11) statement -> IDENT SLASHEQ expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 122
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 80

    (12) statement -> IDENT PLUSPLUS SEMI .

    COMMENT_LINE    reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    COMMENT_BLOCK   reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    WAX             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    IDENT           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    PLUSPLUS        reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    MINUSMINUS      reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    IF              reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    FOR             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    WHILE           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    PRINT           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    RETURN          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    LPAREN          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    INT             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    DOUBLE          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    STRING          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    BOOL            reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    NOT             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    MINUS           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    LBRACKET        reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    STR             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    INPUT           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    $end            reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    RBRACE          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)


state 81

    (13) statement -> IDENT MINUSMINUS SEMI .

    COMMENT_LINE    reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    COMMENT_BLOCK   reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    WAX             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    IDENT           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    PLUSPLUS        reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    MINUSMINUS      reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    IF              reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    FOR             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    WHILE           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    PRINT           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    RETURN          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    LPAREN          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    INT             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    DOUBLE          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    STRING          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    BOOL            reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    NOT             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    MINUS           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    LBRACKET        reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    STR             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    INPUT           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    $end            reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    RBRACE          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)


state 82

    (17) statement -> IDENT DOT APPEND . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 123


state 83

    (18) statement -> IDENT DOT REMOVE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 124


state 84

    (64) expression -> IDENT LPAREN arglist . RPAREN
    (68) arglist -> arglist . COMMA expression

    RPAREN          shift and go to state 125
    COMMA           shift and go to state 126


state 85

    (69) arglist -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 69 (arglist -> expression .)
    COMMA           reduce using rule 69 (arglist -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 86

    (70) arglist -> empty .

    RPAREN          reduce using rule 70 (arglist -> empty .)
    COMMA           reduce using rule 70 (arglist -> empty .)


state 87

    (63) expression -> IDENT LBRACKET expression . RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RBRACKET        shift and go to state 127
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 88

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    LT              reduce using rule 39 (expression -> expression PLUS expression .)
    LE              reduce using rule 39 (expression -> expression PLUS expression .)
    GT              reduce using rule 39 (expression -> expression PLUS expression .)
    GE              reduce using rule 39 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 39 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 39 (expression -> expression PLUS expression .)
    AND             reduce using rule 39 (expression -> expression PLUS expression .)
    OR              reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression PLUS expression .)
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! SLASH           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 89

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    LT              reduce using rule 40 (expression -> expression MINUS expression .)
    LE              reduce using rule 40 (expression -> expression MINUS expression .)
    GT              reduce using rule 40 (expression -> expression MINUS expression .)
    GE              reduce using rule 40 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 40 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 40 (expression -> expression MINUS expression .)
    AND             reduce using rule 40 (expression -> expression MINUS expression .)
    OR              reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 40 (expression -> expression MINUS expression .)
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! SLASH           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 90

    (41) expression -> expression STAR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 41 (expression -> expression STAR expression .)
    PLUS            reduce using rule 41 (expression -> expression STAR expression .)
    MINUS           reduce using rule 41 (expression -> expression STAR expression .)
    STAR            reduce using rule 41 (expression -> expression STAR expression .)
    SLASH           reduce using rule 41 (expression -> expression STAR expression .)
    LT              reduce using rule 41 (expression -> expression STAR expression .)
    LE              reduce using rule 41 (expression -> expression STAR expression .)
    GT              reduce using rule 41 (expression -> expression STAR expression .)
    GE              reduce using rule 41 (expression -> expression STAR expression .)
    EQEQ            reduce using rule 41 (expression -> expression STAR expression .)
    NOTEQ           reduce using rule 41 (expression -> expression STAR expression .)
    AND             reduce using rule 41 (expression -> expression STAR expression .)
    OR              reduce using rule 41 (expression -> expression STAR expression .)
    RPAREN          reduce using rule 41 (expression -> expression STAR expression .)
    COMMA           reduce using rule 41 (expression -> expression STAR expression .)
    RBRACKET        reduce using rule 41 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! STAR            [ shift and go to state 43 ]
  ! SLASH           [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 91

    (42) expression -> expression SLASH expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 42 (expression -> expression SLASH expression .)
    PLUS            reduce using rule 42 (expression -> expression SLASH expression .)
    MINUS           reduce using rule 42 (expression -> expression SLASH expression .)
    STAR            reduce using rule 42 (expression -> expression SLASH expression .)
    SLASH           reduce using rule 42 (expression -> expression SLASH expression .)
    LT              reduce using rule 42 (expression -> expression SLASH expression .)
    LE              reduce using rule 42 (expression -> expression SLASH expression .)
    GT              reduce using rule 42 (expression -> expression SLASH expression .)
    GE              reduce using rule 42 (expression -> expression SLASH expression .)
    EQEQ            reduce using rule 42 (expression -> expression SLASH expression .)
    NOTEQ           reduce using rule 42 (expression -> expression SLASH expression .)
    AND             reduce using rule 42 (expression -> expression SLASH expression .)
    OR              reduce using rule 42 (expression -> expression SLASH expression .)
    RPAREN          reduce using rule 42 (expression -> expression SLASH expression .)
    COMMA           reduce using rule 42 (expression -> expression SLASH expression .)
    RBRACKET        reduce using rule 42 (expression -> expression SLASH expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! STAR            [ shift and go to state 43 ]
  ! SLASH           [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 92

    (43) expression -> expression LT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 43 (expression -> expression LT expression .)
    LT              reduce using rule 43 (expression -> expression LT expression .)
    LE              reduce using rule 43 (expression -> expression LT expression .)
    GT              reduce using rule 43 (expression -> expression LT expression .)
    GE              reduce using rule 43 (expression -> expression LT expression .)
    EQEQ            reduce using rule 43 (expression -> expression LT expression .)
    NOTEQ           reduce using rule 43 (expression -> expression LT expression .)
    AND             reduce using rule 43 (expression -> expression LT expression .)
    OR              reduce using rule 43 (expression -> expression LT expression .)
    RPAREN          reduce using rule 43 (expression -> expression LT expression .)
    COMMA           reduce using rule 43 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 43 (expression -> expression LT expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! STAR            [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! SLASH           [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 93

    (44) expression -> expression LE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 44 (expression -> expression LE expression .)
    LT              reduce using rule 44 (expression -> expression LE expression .)
    LE              reduce using rule 44 (expression -> expression LE expression .)
    GT              reduce using rule 44 (expression -> expression LE expression .)
    GE              reduce using rule 44 (expression -> expression LE expression .)
    EQEQ            reduce using rule 44 (expression -> expression LE expression .)
    NOTEQ           reduce using rule 44 (expression -> expression LE expression .)
    AND             reduce using rule 44 (expression -> expression LE expression .)
    OR              reduce using rule 44 (expression -> expression LE expression .)
    RPAREN          reduce using rule 44 (expression -> expression LE expression .)
    COMMA           reduce using rule 44 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 44 (expression -> expression LE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 44 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LE expression .) ]
  ! STAR            [ reduce using rule 44 (expression -> expression LE expression .) ]
  ! SLASH           [ reduce using rule 44 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 94

    (45) expression -> expression GT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 45 (expression -> expression GT expression .)
    LT              reduce using rule 45 (expression -> expression GT expression .)
    LE              reduce using rule 45 (expression -> expression GT expression .)
    GT              reduce using rule 45 (expression -> expression GT expression .)
    GE              reduce using rule 45 (expression -> expression GT expression .)
    EQEQ            reduce using rule 45 (expression -> expression GT expression .)
    NOTEQ           reduce using rule 45 (expression -> expression GT expression .)
    AND             reduce using rule 45 (expression -> expression GT expression .)
    OR              reduce using rule 45 (expression -> expression GT expression .)
    RPAREN          reduce using rule 45 (expression -> expression GT expression .)
    COMMA           reduce using rule 45 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 45 (expression -> expression GT expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! STAR            [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! SLASH           [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 95

    (46) expression -> expression GE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 46 (expression -> expression GE expression .)
    LT              reduce using rule 46 (expression -> expression GE expression .)
    LE              reduce using rule 46 (expression -> expression GE expression .)
    GT              reduce using rule 46 (expression -> expression GE expression .)
    GE              reduce using rule 46 (expression -> expression GE expression .)
    EQEQ            reduce using rule 46 (expression -> expression GE expression .)
    NOTEQ           reduce using rule 46 (expression -> expression GE expression .)
    AND             reduce using rule 46 (expression -> expression GE expression .)
    OR              reduce using rule 46 (expression -> expression GE expression .)
    RPAREN          reduce using rule 46 (expression -> expression GE expression .)
    COMMA           reduce using rule 46 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 46 (expression -> expression GE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 46 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression GE expression .) ]
  ! STAR            [ reduce using rule 46 (expression -> expression GE expression .) ]
  ! SLASH           [ reduce using rule 46 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 96

    (47) expression -> expression EQEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 47 (expression -> expression EQEQ expression .)
    LT              reduce using rule 47 (expression -> expression EQEQ expression .)
    LE              reduce using rule 47 (expression -> expression EQEQ expression .)
    GT              reduce using rule 47 (expression -> expression EQEQ expression .)
    GE              reduce using rule 47 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 47 (expression -> expression EQEQ expression .)
    NOTEQ           reduce using rule 47 (expression -> expression EQEQ expression .)
    AND             reduce using rule 47 (expression -> expression EQEQ expression .)
    OR              reduce using rule 47 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 47 (expression -> expression EQEQ expression .)
    RBRACKET        reduce using rule 47 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 47 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression EQEQ expression .) ]
  ! STAR            [ reduce using rule 47 (expression -> expression EQEQ expression .) ]
  ! SLASH           [ reduce using rule 47 (expression -> expression EQEQ expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 97

    (48) expression -> expression NOTEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 48 (expression -> expression NOTEQ expression .)
    LT              reduce using rule 48 (expression -> expression NOTEQ expression .)
    LE              reduce using rule 48 (expression -> expression NOTEQ expression .)
    GT              reduce using rule 48 (expression -> expression NOTEQ expression .)
    GE              reduce using rule 48 (expression -> expression NOTEQ expression .)
    EQEQ            reduce using rule 48 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 48 (expression -> expression NOTEQ expression .)
    AND             reduce using rule 48 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 48 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 48 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 48 (expression -> expression NOTEQ expression .)
    RBRACKET        reduce using rule 48 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 48 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression NOTEQ expression .) ]
  ! STAR            [ reduce using rule 48 (expression -> expression NOTEQ expression .) ]
  ! SLASH           [ reduce using rule 48 (expression -> expression NOTEQ expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! GT              [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! EQEQ            [ shift and go to state 49 ]
  ! NOTEQ           [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 98

    (49) expression -> expression AND expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 49 (expression -> expression AND expression .)
    AND             reduce using rule 49 (expression -> expression AND expression .)
    OR              reduce using rule 49 (expression -> expression AND expression .)
    RPAREN          reduce using rule 49 (expression -> expression AND expression .)
    COMMA           reduce using rule 49 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 49 (expression -> expression AND expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50

  ! PLUS            [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! STAR            [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! SLASH           [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! EQEQ            [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 99

    (50) expression -> expression OR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 50 (expression -> expression OR expression .)
    OR              reduce using rule 50 (expression -> expression OR expression .)
    RPAREN          reduce using rule 50 (expression -> expression OR expression .)
    COMMA           reduce using rule 50 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 50 (expression -> expression OR expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51

  ! PLUS            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! STAR            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! SLASH           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 52 ]


state 100

    (14) statement -> PLUSPLUS IDENT SEMI .

    COMMENT_LINE    reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    COMMENT_BLOCK   reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    WAX             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    IDENT           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    PLUSPLUS        reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    MINUSMINUS      reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    IF              reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    FOR             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    WHILE           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    PRINT           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    RETURN          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    LPAREN          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    INT             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    DOUBLE          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    STRING          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    BOOL            reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    NOT             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    MINUS           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    LBRACKET        reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    STR             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    INPUT           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    $end            reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    RBRACE          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)


state 101

    (15) statement -> MINUSMINUS IDENT SEMI .

    COMMENT_LINE    reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    COMMENT_BLOCK   reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    WAX             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    IDENT           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    PLUSPLUS        reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    MINUSMINUS      reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    IF              reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    FOR             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    WHILE           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    PRINT           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    RETURN          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    LPAREN          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    INT             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    DOUBLE          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    STRING          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    BOOL            reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    NOT             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    MINUS           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    LBRACKET        reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    STR             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    INPUT           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    $end            reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    RBRACE          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)


state 102

    (16) statement -> ident_list EQUAL expression_list . SEMI
    (71) expression_list -> expression_list . COMMA expression

    SEMI            shift and go to state 128
    COMMA           shift and go to state 110


state 103

    (73) ident_list -> ident_list COMMA IDENT .

    EQUAL           reduce using rule 73 (ident_list -> ident_list COMMA IDENT .)
    COMMA           reduce using rule 73 (ident_list -> ident_list COMMA IDENT .)


state 104

    (51) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    STAR            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 105

    (19) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (20) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 129
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 106

    (21) statement -> FOR LPAREN WAX . IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 130


state 107

    (31) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 108

    (32) statement -> PRINT LPAREN expression . RPAREN SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 132
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 109

    (35) statement -> RETURN expression_list SEMI .

    COMMENT_LINE    reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    COMMENT_BLOCK   reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    WAX             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    IDENT           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    PLUSPLUS        reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    MINUSMINUS      reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    IF              reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    FOR             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    WHILE           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    PRINT           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    RETURN          reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    LPAREN          reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    INT             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    DOUBLE          reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    STRING          reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    BOOL            reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    NOT             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    MINUS           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    LBRACKET        reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    STR             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    INPUT           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    $end            reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    RBRACE          reduce using rule 35 (statement -> RETURN expression_list SEMI .)


state 110

    (71) expression_list -> expression_list COMMA . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 133

state 111

    (59) expression -> LBRACKET list_items RBRACKET .

    SEMI            reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    PLUS            reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    MINUS           reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    STAR            reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    SLASH           reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    LT              reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    LE              reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    GT              reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    GE              reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    EQEQ            reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    NOTEQ           reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    AND             reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    OR              reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    RPAREN          reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    COMMA           reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)
    RBRACKET        reduce using rule 59 (expression -> LBRACKET list_items RBRACKET .)


state 112

    (60) list_items -> list_items COMMA . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 134

state 113

    (65) expression -> STR LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 135
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 114

    (66) expression -> INPUT LPAREN RPAREN .

    SEMI            reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    PLUS            reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    MINUS           reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    STAR            reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    SLASH           reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    LT              reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    LE              reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    GT              reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    GE              reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    EQEQ            reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    NOTEQ           reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    AND             reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    OR              reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    RPAREN          reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    COMMA           reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)
    RBRACKET        reduce using rule 66 (expression -> INPUT LPAREN RPAREN .)


state 115

    (67) expression -> INPUT LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 136
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 116

    (6) statement -> WAX IDENT COLON IDENT . EQUAL expression SEMI

    EQUAL           shift and go to state 137


state 117

    (37) statement -> WAX FUNCTION IDENT COLON . return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (33) return_type -> . IDENT
    (34) return_type -> . VOID

    IDENT           shift and go to state 138
    VOID            shift and go to state 140

    return_type                    shift and go to state 139

state 118

    (7) statement -> IDENT EQUAL expression SEMI .

    COMMENT_LINE    reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    COMMENT_BLOCK   reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    WAX             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    IDENT           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    PLUSPLUS        reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    MINUSMINUS      reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    IF              reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    FOR             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    WHILE           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    PRINT           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    RETURN          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    LPAREN          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    INT             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    DOUBLE          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    STRING          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    BOOL            reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    NOT             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    MINUS           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    LBRACKET        reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    STR             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    INPUT           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    $end            reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    RBRACE          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)


state 119

    (8) statement -> IDENT PLUSEQ expression SEMI .

    COMMENT_LINE    reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    WAX             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    IDENT           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    PLUSPLUS        reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    MINUSMINUS      reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    IF              reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    FOR             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    WHILE           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    PRINT           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    RETURN          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    LPAREN          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    INT             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    DOUBLE          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    STRING          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    BOOL            reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    NOT             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    MINUS           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    LBRACKET        reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    STR             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    INPUT           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    $end            reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    RBRACE          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)


state 120

    (9) statement -> IDENT MINUSEQ expression SEMI .

    COMMENT_LINE    reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    WAX             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    IDENT           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    PLUSPLUS        reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    MINUSMINUS      reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    IF              reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    FOR             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    WHILE           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    PRINT           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    RETURN          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    LPAREN          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    INT             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    DOUBLE          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    STRING          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    BOOL            reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    NOT             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    MINUS           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    LBRACKET        reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    STR             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    INPUT           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    $end            reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    RBRACE          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)


state 121

    (10) statement -> IDENT STAREQ expression SEMI .

    COMMENT_LINE    reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    WAX             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    IDENT           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    PLUSPLUS        reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    MINUSMINUS      reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    IF              reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    FOR             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    WHILE           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    PRINT           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    RETURN          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    LPAREN          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    INT             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    DOUBLE          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    STRING          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    BOOL            reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    NOT             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    MINUS           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    LBRACKET        reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    STR             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    INPUT           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    $end            reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    RBRACE          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)


state 122

    (11) statement -> IDENT SLASHEQ expression SEMI .

    COMMENT_LINE    reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    WAX             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    IDENT           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    PLUSPLUS        reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    MINUSMINUS      reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    IF              reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    FOR             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    WHILE           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    PRINT           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    RETURN          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    LPAREN          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    INT             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    DOUBLE          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    STRING          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    BOOL            reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    NOT             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    MINUS           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    LBRACKET        reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    STR             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    INPUT           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    $end            reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    RBRACE          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)


state 123

    (17) statement -> IDENT DOT APPEND LPAREN . expression RPAREN SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 141

state 124

    (18) statement -> IDENT DOT REMOVE LPAREN . expression RPAREN SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 142

state 125

    (64) expression -> IDENT LPAREN arglist RPAREN .

    SEMI            reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    PLUS            reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    MINUS           reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    STAR            reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    SLASH           reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    LT              reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    LE              reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    GT              reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    GE              reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    EQEQ            reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    NOTEQ           reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    AND             reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    OR              reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    COMMA           reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)
    RBRACKET        reduce using rule 64 (expression -> IDENT LPAREN arglist RPAREN .)


state 126

    (68) arglist -> arglist COMMA . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 143

state 127

    (63) expression -> IDENT LBRACKET expression RBRACKET .

    SEMI            reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    STAR            reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    SLASH           reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    LT              reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    LE              reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    GT              reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    GE              reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    EQEQ            reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    NOTEQ           reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    AND             reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    OR              reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 63 (expression -> IDENT LBRACKET expression RBRACKET .)


state 128

    (16) statement -> ident_list EQUAL expression_list SEMI .

    COMMENT_LINE    reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    COMMENT_BLOCK   reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    WAX             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    IDENT           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    PLUSPLUS        reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    MINUSMINUS      reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    IF              reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    FOR             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    WHILE           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    PRINT           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    RETURN          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    LPAREN          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    INT             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    DOUBLE          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    STRING          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    BOOL            reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    NOT             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    MINUS           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    LBRACKET        reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    STR             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    INPUT           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    $end            reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    RBRACE          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)


state 129

    (19) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (20) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 144


state 130

    (21) statement -> FOR LPAREN WAX IDENT . COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    COLON           shift and go to state 145


state 131

    (31) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 146


state 132

    (32) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 147


state 133

    (71) expression_list -> expression_list COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            reduce using rule 71 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 71 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 134

    (60) list_items -> list_items COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RBRACKET        reduce using rule 60 (list_items -> list_items COMMA expression .)
    COMMA           reduce using rule 60 (list_items -> list_items COMMA expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 135

    (65) expression -> STR LPAREN expression RPAREN .

    SEMI            reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    PLUS            reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    MINUS           reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    STAR            reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    SLASH           reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    LT              reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    LE              reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    GT              reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    GE              reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    EQEQ            reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    AND             reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    OR              reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    COMMA           reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 65 (expression -> STR LPAREN expression RPAREN .)


state 136

    (67) expression -> INPUT LPAREN expression RPAREN .

    SEMI            reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    PLUS            reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    MINUS           reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    STAR            reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    SLASH           reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    LT              reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    LE              reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    GT              reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    GE              reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    EQEQ            reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    AND             reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    OR              reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 67 (expression -> INPUT LPAREN expression RPAREN .)


state 137

    (6) statement -> WAX IDENT COLON IDENT EQUAL . expression SEMI
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 148

state 138

    (33) return_type -> IDENT .

    LPAREN          reduce using rule 33 (return_type -> IDENT .)


state 139

    (37) statement -> WAX FUNCTION IDENT COLON return_type . LPAREN paramlist RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 149


state 140

    (34) return_type -> VOID .

    LPAREN          reduce using rule 34 (return_type -> VOID .)


state 141

    (17) statement -> IDENT DOT APPEND LPAREN expression . RPAREN SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 150
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 142

    (18) statement -> IDENT DOT REMOVE LPAREN expression . RPAREN SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          shift and go to state 151
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 143

    (68) arglist -> arglist COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 68 (arglist -> arglist COMMA expression .)
    COMMA           reduce using rule 68 (arglist -> arglist COMMA expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 144

    (19) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (20) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    RBRACE          reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    expression                     shift and go to state 8
    program                        shift and go to state 152
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 11

state 145

    (21) statement -> FOR LPAREN WAX IDENT COLON . IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 153


state 146

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    RBRACE          reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    expression                     shift and go to state 8
    program                        shift and go to state 154
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 11

state 147

    (32) statement -> PRINT LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    INT             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DOUBLE          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    BOOL            reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STR             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    INPUT           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 148

    (6) statement -> WAX IDENT COLON IDENT EQUAL expression . SEMI
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 155
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 149

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN . paramlist RPAREN LBRACE program RBRACE
    (75) paramlist -> . paramlist COMMA IDENT COLON IDENT
    (76) paramlist -> . IDENT COLON IDENT
    (77) paramlist -> . empty
    (78) empty -> .

    IDENT           shift and go to state 156
    RPAREN          reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)

    paramlist                      shift and go to state 157
    empty                          shift and go to state 158

state 150

    (17) statement -> IDENT DOT APPEND LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 159


state 151

    (18) statement -> IDENT DOT REMOVE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 160


state 152

    (19) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (20) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RBRACE          shift and go to state 161
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 8
    statement                      shift and go to state 27
    ident_list                     shift and go to state 11

state 153

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT . EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    EQUAL           shift and go to state 162


state 154

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RBRACE          shift and go to state 163
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 8
    statement                      shift and go to state 27
    ident_list                     shift and go to state 11

state 155

    (6) statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .

    COMMENT_LINE    reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    COMMENT_BLOCK   reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    WAX             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    IDENT           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    PLUSPLUS        reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    MINUSMINUS      reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    IF              reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    FOR             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    WHILE           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    PRINT           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    RETURN          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    LPAREN          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    INT             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    DOUBLE          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    STRING          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    BOOL            reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    NOT             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    MINUS           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    LBRACKET        reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    STR             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    INPUT           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    $end            reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    RBRACE          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)


state 156

    (76) paramlist -> IDENT . COLON IDENT

    COLON           shift and go to state 164


state 157

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist . RPAREN LBRACE program RBRACE
    (75) paramlist -> paramlist . COMMA IDENT COLON IDENT

    RPAREN          shift and go to state 165
    COMMA           shift and go to state 166


state 158

    (77) paramlist -> empty .

    RPAREN          reduce using rule 77 (paramlist -> empty .)
    COMMA           reduce using rule 77 (paramlist -> empty .)


state 159

    (17) statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    INT             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    DOUBLE          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    BOOL            reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    STR             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    INPUT           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)


state 160

    (18) statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    INT             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    DOUBLE          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    BOOL            reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    STR             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    INPUT           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)


state 161

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    COMMENT_LINE    reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    DOUBLE          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUS           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    LBRACKET        reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 167


state 162

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL . expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 168

state 163

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    DOUBLE          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUS           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    LBRACKET        reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 164

    (76) paramlist -> IDENT COLON . IDENT

    IDENT           shift and go to state 169


state 165

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 170


state 166

    (75) paramlist -> paramlist COMMA . IDENT COLON IDENT

    IDENT           shift and go to state 171


state 167

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 172


state 168

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression . SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 173
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 169

    (76) paramlist -> IDENT COLON IDENT .

    RPAREN          reduce using rule 76 (paramlist -> IDENT COLON IDENT .)
    COMMA           reduce using rule 76 (paramlist -> IDENT COLON IDENT .)


state 170

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    RBRACE          reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    program                        shift and go to state 174
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    expression                     shift and go to state 8
    ident_list                     shift and go to state 11

state 171

    (75) paramlist -> paramlist COMMA IDENT . COLON IDENT

    COLON           shift and go to state 175


state 172

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    RBRACE          reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    expression                     shift and go to state 8
    program                        shift and go to state 176
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 11

state 173

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI . expression SEMI for_increment RPAREN LBRACE program RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 177

state 174

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RBRACE          shift and go to state 178
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 8
    ident_list                     shift and go to state 11

state 175

    (75) paramlist -> paramlist COMMA IDENT COLON . IDENT

    IDENT           shift and go to state 179


state 176

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RBRACE          shift and go to state 180
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 8
    statement                      shift and go to state 27
    ident_list                     shift and go to state 11

state 177

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression . SEMI for_increment RPAREN LBRACE program RBRACE
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    SEMI            shift and go to state 181
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 178

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    DOUBLE          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    MINUS           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    LBRACKET        reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)


state 179

    (75) paramlist -> paramlist COMMA IDENT COLON IDENT .

    RPAREN          reduce using rule 75 (paramlist -> paramlist COMMA IDENT COLON IDENT .)
    COMMA           reduce using rule 75 (paramlist -> paramlist COMMA IDENT COLON IDENT .)


state 180

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WAX             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IDENT           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FOR             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PRINT           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    LPAREN          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INT             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    DOUBLE          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    STRING          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    BOOL            reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NOT             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    MINUS           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    LBRACKET        reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    STR             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INPUT           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)


state 181

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI . for_increment RPAREN LBRACE program RBRACE
    (22) for_increment -> . IDENT PLUSPLUS
    (23) for_increment -> . IDENT MINUSMINUS
    (24) for_increment -> . PLUSPLUS IDENT
    (25) for_increment -> . MINUSMINUS IDENT
    (26) for_increment -> . IDENT PLUSEQ expression
    (27) for_increment -> . IDENT MINUSEQ expression
    (28) for_increment -> . IDENT STAREQ expression
    (29) for_increment -> . IDENT SLASHEQ expression
    (30) for_increment -> . IDENT EQUAL expression

    IDENT           shift and go to state 182
    PLUSPLUS        shift and go to state 184
    MINUSMINUS      shift and go to state 185

    for_increment                  shift and go to state 183

state 182

    (22) for_increment -> IDENT . PLUSPLUS
    (23) for_increment -> IDENT . MINUSMINUS
    (26) for_increment -> IDENT . PLUSEQ expression
    (27) for_increment -> IDENT . MINUSEQ expression
    (28) for_increment -> IDENT . STAREQ expression
    (29) for_increment -> IDENT . SLASHEQ expression
    (30) for_increment -> IDENT . EQUAL expression

    PLUSPLUS        shift and go to state 186
    MINUSMINUS      shift and go to state 187
    PLUSEQ          shift and go to state 188
    MINUSEQ         shift and go to state 189
    STAREQ          shift and go to state 190
    SLASHEQ         shift and go to state 191
    EQUAL           shift and go to state 192


state 183

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 193


state 184

    (24) for_increment -> PLUSPLUS . IDENT

    IDENT           shift and go to state 194


state 185

    (25) for_increment -> MINUSMINUS . IDENT

    IDENT           shift and go to state 195


state 186

    (22) for_increment -> IDENT PLUSPLUS .

    RPAREN          reduce using rule 22 (for_increment -> IDENT PLUSPLUS .)


state 187

    (23) for_increment -> IDENT MINUSMINUS .

    RPAREN          reduce using rule 23 (for_increment -> IDENT MINUSMINUS .)


state 188

    (26) for_increment -> IDENT PLUSEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 196

state 189

    (27) for_increment -> IDENT MINUSEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 197

state 190

    (28) for_increment -> IDENT STAREQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 198

state 191

    (29) for_increment -> IDENT SLASHEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 199

state 192

    (30) for_increment -> IDENT EQUAL . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    IDENT           shift and go to state 58
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 200

state 193

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 201


state 194

    (24) for_increment -> PLUSPLUS IDENT .

    RPAREN          reduce using rule 24 (for_increment -> PLUSPLUS IDENT .)


state 195

    (25) for_increment -> MINUSMINUS IDENT .

    RPAREN          reduce using rule 25 (for_increment -> MINUSMINUS IDENT .)


state 196

    (26) for_increment -> IDENT PLUSEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 26 (for_increment -> IDENT PLUSEQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 197

    (27) for_increment -> IDENT MINUSEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 27 (for_increment -> IDENT MINUSEQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 198

    (28) for_increment -> IDENT STAREQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 28 (for_increment -> IDENT STAREQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 199

    (29) for_increment -> IDENT SLASHEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 29 (for_increment -> IDENT SLASHEQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 200

    (30) for_increment -> IDENT EQUAL expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . STAR expression
    (42) expression -> expression . SLASH expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . EQEQ expression
    (48) expression -> expression . NOTEQ expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression

    RPAREN          reduce using rule 30 (for_increment -> IDENT EQUAL expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    STAR            shift and go to state 43
    SLASH           shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQEQ            shift and go to state 49
    NOTEQ           shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 201

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (78) empty -> .
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    RBRACE          reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

  ! COMMENT_LINE    [ reduce using rule 78 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 78 (empty -> .) ]
  ! WAX             [ reduce using rule 78 (empty -> .) ]
  ! IDENT           [ reduce using rule 78 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 78 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! FOR             [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! LPAREN          [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 78 (empty -> .) ]
  ! STRING          [ reduce using rule 78 (empty -> .) ]
  ! BOOL            [ reduce using rule 78 (empty -> .) ]
  ! NOT             [ reduce using rule 78 (empty -> .) ]
  ! MINUS           [ reduce using rule 78 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 78 (empty -> .) ]
  ! STR             [ reduce using rule 78 (empty -> .) ]
  ! INPUT           [ reduce using rule 78 (empty -> .) ]

    expression                     shift and go to state 8
    program                        shift and go to state 202
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 11

state 202

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (38) statement -> . expression SEMI
    (73) ident_list -> . ident_list COMMA IDENT
    (74) ident_list -> . IDENT
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression STAR expression
    (42) expression -> . expression SLASH expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression EQEQ expression
    (48) expression -> . expression NOTEQ expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . INT
    (53) expression -> . DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOL
    (56) expression -> . NOT expression
    (57) expression -> . MINUS expression
    (58) expression -> . IDENT
    (59) expression -> . LBRACKET list_items RBRACKET
    (63) expression -> . IDENT LBRACKET expression RBRACKET
    (64) expression -> . IDENT LPAREN arglist RPAREN
    (65) expression -> . STR LPAREN expression RPAREN
    (66) expression -> . INPUT LPAREN RPAREN
    (67) expression -> . INPUT LPAREN expression RPAREN

    RBRACE          shift and go to state 203
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 9
    MINUSMINUS      shift and go to state 10
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 15
    PRINT           shift and go to state 16
    RETURN          shift and go to state 17
    LPAREN          shift and go to state 12
    INT             shift and go to state 19
    DOUBLE          shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    NOT             shift and go to state 23
    MINUS           shift and go to state 18
    LBRACKET        shift and go to state 24
    STR             shift and go to state 25
    INPUT           shift and go to state 26

    expression                     shift and go to state 8
    statement                      shift and go to state 27
    ident_list                     shift and go to state 11

state 203

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    DOUBLE          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    STRING          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    BOOL            reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    MINUS           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    LBRACKET        reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    STR             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    INPUT           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT_LINE in state 0 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 0 resolved as shift
WARNING: shift/reduce conflict for WAX in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 0 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 0 resolved as shift
WARNING: shift/reduce conflict for STR in state 0 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 0 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 7 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 144 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 144 resolved as shift
WARNING: shift/reduce conflict for WAX in state 144 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for FOR in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 144 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 144 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for INT in state 144 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 144 resolved as shift
WARNING: shift/reduce conflict for STRING in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 144 resolved as shift
WARNING: shift/reduce conflict for NOT in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 144 resolved as shift
WARNING: shift/reduce conflict for STR in state 144 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 144 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 146 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 146 resolved as shift
WARNING: shift/reduce conflict for WAX in state 146 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 146 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for FOR in state 146 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 146 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 146 resolved as shift
WARNING: shift/reduce conflict for INT in state 146 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 146 resolved as shift
WARNING: shift/reduce conflict for STRING in state 146 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 146 resolved as shift
WARNING: shift/reduce conflict for NOT in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 146 resolved as shift
WARNING: shift/reduce conflict for STR in state 146 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 146 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 170 resolved as shift
WARNING: shift/reduce conflict for WAX in state 170 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 170 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 170 resolved as shift
WARNING: shift/reduce conflict for INT in state 170 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 170 resolved as shift
WARNING: shift/reduce conflict for STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 170 resolved as shift
WARNING: shift/reduce conflict for NOT in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 170 resolved as shift
WARNING: shift/reduce conflict for STR in state 170 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 172 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 172 resolved as shift
WARNING: shift/reduce conflict for WAX in state 172 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 172 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 172 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 172 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 172 resolved as shift
WARNING: shift/reduce conflict for NOT in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 172 resolved as shift
WARNING: shift/reduce conflict for STR in state 172 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 172 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 201 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 201 resolved as shift
WARNING: shift/reduce conflict for WAX in state 201 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 201 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 201 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 201 resolved as shift
WARNING: shift/reduce conflict for IF in state 201 resolved as shift
WARNING: shift/reduce conflict for FOR in state 201 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 201 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 201 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 201 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 201 resolved as shift
WARNING: shift/reduce conflict for INT in state 201 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 201 resolved as shift
WARNING: shift/reduce conflict for STRING in state 201 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 201 resolved as shift
WARNING: shift/reduce conflict for NOT in state 201 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 201 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 201 resolved as shift
WARNING: shift/reduce conflict for STR in state 201 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 201 resolved as shift
