Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     statement -> COMMENT_LINE
Rule 5     statement -> COMMENT_BLOCK
Rule 6     statement -> WAX IDENT COLON IDENT EQUAL expression SEMI
Rule 7     statement -> IDENT EQUAL expression SEMI
Rule 8     statement -> IDENT PLUSEQ expression SEMI
Rule 9     statement -> IDENT MINUSEQ expression SEMI
Rule 10    statement -> IDENT STAREQ expression SEMI
Rule 11    statement -> IDENT SLASHEQ expression SEMI
Rule 12    statement -> IDENT PLUSPLUS SEMI
Rule 13    statement -> IDENT MINUSMINUS SEMI
Rule 14    statement -> PLUSPLUS IDENT SEMI
Rule 15    statement -> MINUSMINUS IDENT SEMI
Rule 16    statement -> ident_list EQUAL expression_list SEMI
Rule 17    statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI
Rule 18    statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI
Rule 19    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 20    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 21    statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
Rule 22    for_increment -> IDENT PLUSPLUS
Rule 23    for_increment -> IDENT MINUSMINUS
Rule 24    for_increment -> PLUSPLUS IDENT
Rule 25    for_increment -> MINUSMINUS IDENT
Rule 26    for_increment -> IDENT PLUSEQ expression
Rule 27    for_increment -> IDENT MINUSEQ expression
Rule 28    for_increment -> IDENT STAREQ expression
Rule 29    for_increment -> IDENT SLASHEQ expression
Rule 30    for_increment -> IDENT EQUAL expression
Rule 31    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 32    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 33    return_type -> IDENT
Rule 34    return_type -> VOID
Rule 35    statement -> RETURN expression_list SEMI
Rule 36    statement -> RETURN SEMI
Rule 37    statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression STAR expression
Rule 41    expression -> expression SLASH expression
Rule 42    expression -> expression LT expression
Rule 43    expression -> expression LE expression
Rule 44    expression -> expression GT expression
Rule 45    expression -> expression GE expression
Rule 46    expression -> expression EQEQ expression
Rule 47    expression -> expression NOTEQ expression
Rule 48    expression -> expression AND expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> INT
Rule 52    expression -> DOUBLE
Rule 53    expression -> STRING
Rule 54    expression -> BOOL
Rule 55    expression -> NOT expression
Rule 56    expression -> MINUS expression
Rule 57    expression -> IDENT
Rule 58    expression -> LBRACKET list_items RBRACKET
Rule 59    list_items -> list_items COMMA expression
Rule 60    list_items -> expression
Rule 61    list_items -> empty
Rule 62    expression -> IDENT LBRACKET expression RBRACKET
Rule 63    expression -> IDENT LPAREN arglist RPAREN
Rule 64    expression -> STR LPAREN expression RPAREN
Rule 65    expression -> INPUT LPAREN RPAREN
Rule 66    expression -> INPUT LPAREN expression RPAREN
Rule 67    arglist -> arglist COMMA expression
Rule 68    arglist -> expression
Rule 69    arglist -> empty
Rule 70    expression_list -> expression_list COMMA expression
Rule 71    expression_list -> expression
Rule 72    ident_list -> ident_list COMMA IDENT
Rule 73    ident_list -> IDENT
Rule 74    paramlist -> paramlist COMMA IDENT COLON IDENT
Rule 75    paramlist -> IDENT COLON IDENT
Rule 76    paramlist -> empty
Rule 77    empty -> <empty>

Terminals, with rules where they appear

AND                  : 48
APPEND               : 17
BOOL                 : 54
COLON                : 6 21 37 74 75
COMMA                : 59 67 70 72 74
COMMENT_BLOCK        : 5
COMMENT_LINE         : 4
DOT                  : 17 18
DOUBLE               : 52
ELSE                 : 20
EQEQ                 : 46
EQUAL                : 6 7 16 21 30
FOR                  : 21
FUNCTION             : 37
GE                   : 45
GT                   : 44
IDENT                : 6 6 7 8 9 10 11 12 13 14 15 17 18 21 21 22 23 24 25 26 27 28 29 30 33 37 57 62 63 72 73 74 74 75 75
IF                   : 19 20
INPUT                : 65 66
INT                  : 51
LBRACE               : 19 20 20 21 31 37
LBRACKET             : 58 62
LE                   : 43
LPAREN               : 17 18 19 20 21 31 32 37 50 63 64 65 66
LT                   : 42
MINUS                : 39 56
MINUSEQ              : 9 27
MINUSMINUS           : 13 15 23 25
NOT                  : 55
NOTEQ                : 47
OR                   : 49
PLUS                 : 38
PLUSEQ               : 8 26
PLUSPLUS             : 12 14 22 24
PRINT                : 32
RBRACE               : 19 20 20 21 31 37
RBRACKET             : 58 62
REMOVE               : 18
RETURN               : 35 36
RPAREN               : 17 18 19 20 21 31 32 37 50 63 64 65 66
SEMI                 : 6 7 8 9 10 11 12 13 14 15 16 17 18 21 21 32 35 36
SLASH                : 41
SLASHEQ              : 11 29
STAR                 : 40
STAREQ               : 10 28
STR                  : 64
STRING               : 53
VOID                 : 34
WAX                  : 6 21 37
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

arglist              : 63 67
empty                : 3 61 69 76
expression           : 6 7 8 9 10 11 17 18 19 20 21 21 26 27 28 29 30 31 32 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 55 56 59 60 62 64 66 67 68 70 71
expression_list      : 16 35 70
for_increment        : 21
ident_list           : 16 72
list_items           : 58 59
paramlist            : 37 74
program              : 1 19 20 20 21 31 37 0
return_type          : 37
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    $end            reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 2

    (2) program -> statement .

    COMMENT_LINE    reduce using rule 2 (program -> statement .)
    COMMENT_BLOCK   reduce using rule 2 (program -> statement .)
    WAX             reduce using rule 2 (program -> statement .)
    IDENT           reduce using rule 2 (program -> statement .)
    PLUSPLUS        reduce using rule 2 (program -> statement .)
    MINUSMINUS      reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    FOR             reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    PRINT           reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)


state 3

    (3) program -> empty .

    COMMENT_LINE    reduce using rule 3 (program -> empty .)
    COMMENT_BLOCK   reduce using rule 3 (program -> empty .)
    WAX             reduce using rule 3 (program -> empty .)
    IDENT           reduce using rule 3 (program -> empty .)
    PLUSPLUS        reduce using rule 3 (program -> empty .)
    MINUSMINUS      reduce using rule 3 (program -> empty .)
    IF              reduce using rule 3 (program -> empty .)
    FOR             reduce using rule 3 (program -> empty .)
    WHILE           reduce using rule 3 (program -> empty .)
    PRINT           reduce using rule 3 (program -> empty .)
    RETURN          reduce using rule 3 (program -> empty .)
    $end            reduce using rule 3 (program -> empty .)
    RBRACE          reduce using rule 3 (program -> empty .)


state 4

    (4) statement -> COMMENT_LINE .

    COMMENT_LINE    reduce using rule 4 (statement -> COMMENT_LINE .)
    COMMENT_BLOCK   reduce using rule 4 (statement -> COMMENT_LINE .)
    WAX             reduce using rule 4 (statement -> COMMENT_LINE .)
    IDENT           reduce using rule 4 (statement -> COMMENT_LINE .)
    PLUSPLUS        reduce using rule 4 (statement -> COMMENT_LINE .)
    MINUSMINUS      reduce using rule 4 (statement -> COMMENT_LINE .)
    IF              reduce using rule 4 (statement -> COMMENT_LINE .)
    FOR             reduce using rule 4 (statement -> COMMENT_LINE .)
    WHILE           reduce using rule 4 (statement -> COMMENT_LINE .)
    PRINT           reduce using rule 4 (statement -> COMMENT_LINE .)
    RETURN          reduce using rule 4 (statement -> COMMENT_LINE .)
    $end            reduce using rule 4 (statement -> COMMENT_LINE .)
    RBRACE          reduce using rule 4 (statement -> COMMENT_LINE .)


state 5

    (5) statement -> COMMENT_BLOCK .

    COMMENT_LINE    reduce using rule 5 (statement -> COMMENT_BLOCK .)
    COMMENT_BLOCK   reduce using rule 5 (statement -> COMMENT_BLOCK .)
    WAX             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    IDENT           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    PLUSPLUS        reduce using rule 5 (statement -> COMMENT_BLOCK .)
    MINUSMINUS      reduce using rule 5 (statement -> COMMENT_BLOCK .)
    IF              reduce using rule 5 (statement -> COMMENT_BLOCK .)
    FOR             reduce using rule 5 (statement -> COMMENT_BLOCK .)
    WHILE           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    PRINT           reduce using rule 5 (statement -> COMMENT_BLOCK .)
    RETURN          reduce using rule 5 (statement -> COMMENT_BLOCK .)
    $end            reduce using rule 5 (statement -> COMMENT_BLOCK .)
    RBRACE          reduce using rule 5 (statement -> COMMENT_BLOCK .)


state 6

    (6) statement -> WAX . IDENT COLON IDENT EQUAL expression SEMI
    (37) statement -> WAX . FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 17
    FUNCTION        shift and go to state 18


state 7

    (7) statement -> IDENT . EQUAL expression SEMI
    (8) statement -> IDENT . PLUSEQ expression SEMI
    (9) statement -> IDENT . MINUSEQ expression SEMI
    (10) statement -> IDENT . STAREQ expression SEMI
    (11) statement -> IDENT . SLASHEQ expression SEMI
    (12) statement -> IDENT . PLUSPLUS SEMI
    (13) statement -> IDENT . MINUSMINUS SEMI
    (17) statement -> IDENT . DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> IDENT . DOT REMOVE LPAREN expression RPAREN SEMI
    (73) ident_list -> IDENT .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 19
    PLUSEQ          shift and go to state 20
    MINUSEQ         shift and go to state 21
    STAREQ          shift and go to state 22
    SLASHEQ         shift and go to state 23
    PLUSPLUS        shift and go to state 24
    MINUSMINUS      shift and go to state 25
    DOT             shift and go to state 26
    COMMA           reduce using rule 73 (ident_list -> IDENT .)

  ! EQUAL           [ reduce using rule 73 (ident_list -> IDENT .) ]


state 8

    (14) statement -> PLUSPLUS . IDENT SEMI

    IDENT           shift and go to state 27


state 9

    (15) statement -> MINUSMINUS . IDENT SEMI

    IDENT           shift and go to state 28


state 10

    (16) statement -> ident_list . EQUAL expression_list SEMI
    (72) ident_list -> ident_list . COMMA IDENT

    EQUAL           shift and go to state 29
    COMMA           shift and go to state 30


state 11

    (19) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 31


state 12

    (21) statement -> FOR . LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 32


state 13

    (31) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 33


state 14

    (32) statement -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 34


state 15

    (35) statement -> RETURN . expression_list SEMI
    (36) statement -> RETURN . SEMI
    (70) expression_list -> . expression_list COMMA expression
    (71) expression_list -> . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    SEMI            shift and go to state 36
    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression_list                shift and go to state 35
    expression                     shift and go to state 37

state 16

    (1) program -> program statement .

    COMMENT_LINE    reduce using rule 1 (program -> program statement .)
    COMMENT_BLOCK   reduce using rule 1 (program -> program statement .)
    WAX             reduce using rule 1 (program -> program statement .)
    IDENT           reduce using rule 1 (program -> program statement .)
    PLUSPLUS        reduce using rule 1 (program -> program statement .)
    MINUSMINUS      reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    FOR             reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    PRINT           reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)


state 17

    (6) statement -> WAX IDENT . COLON IDENT EQUAL expression SEMI

    COLON           shift and go to state 49


state 18

    (37) statement -> WAX FUNCTION . IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 50


state 19

    (7) statement -> IDENT EQUAL . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 51

state 20

    (8) statement -> IDENT PLUSEQ . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 52

state 21

    (9) statement -> IDENT MINUSEQ . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 53

state 22

    (10) statement -> IDENT STAREQ . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 54

state 23

    (11) statement -> IDENT SLASHEQ . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 55

state 24

    (12) statement -> IDENT PLUSPLUS . SEMI

    SEMI            shift and go to state 56


state 25

    (13) statement -> IDENT MINUSMINUS . SEMI

    SEMI            shift and go to state 57


state 26

    (17) statement -> IDENT DOT . APPEND LPAREN expression RPAREN SEMI
    (18) statement -> IDENT DOT . REMOVE LPAREN expression RPAREN SEMI

    APPEND          shift and go to state 58
    REMOVE          shift and go to state 59


state 27

    (14) statement -> PLUSPLUS IDENT . SEMI

    SEMI            shift and go to state 60


state 28

    (15) statement -> MINUSMINUS IDENT . SEMI

    SEMI            shift and go to state 61


state 29

    (16) statement -> ident_list EQUAL . expression_list SEMI
    (70) expression_list -> . expression_list COMMA expression
    (71) expression_list -> . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression_list                shift and go to state 62
    expression                     shift and go to state 37

state 30

    (72) ident_list -> ident_list COMMA . IDENT

    IDENT           shift and go to state 63


state 31

    (19) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (20) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 64

state 32

    (21) statement -> FOR LPAREN . WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    WAX             shift and go to state 65


state 33

    (31) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 66

state 34

    (32) statement -> PRINT LPAREN . expression RPAREN SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 67

state 35

    (35) statement -> RETURN expression_list . SEMI
    (70) expression_list -> expression_list . COMMA expression

    SEMI            shift and go to state 68
    COMMA           shift and go to state 69


state 36

    (36) statement -> RETURN SEMI .

    COMMENT_LINE    reduce using rule 36 (statement -> RETURN SEMI .)
    COMMENT_BLOCK   reduce using rule 36 (statement -> RETURN SEMI .)
    WAX             reduce using rule 36 (statement -> RETURN SEMI .)
    IDENT           reduce using rule 36 (statement -> RETURN SEMI .)
    PLUSPLUS        reduce using rule 36 (statement -> RETURN SEMI .)
    MINUSMINUS      reduce using rule 36 (statement -> RETURN SEMI .)
    IF              reduce using rule 36 (statement -> RETURN SEMI .)
    FOR             reduce using rule 36 (statement -> RETURN SEMI .)
    WHILE           reduce using rule 36 (statement -> RETURN SEMI .)
    PRINT           reduce using rule 36 (statement -> RETURN SEMI .)
    RETURN          reduce using rule 36 (statement -> RETURN SEMI .)
    $end            reduce using rule 36 (statement -> RETURN SEMI .)
    RBRACE          reduce using rule 36 (statement -> RETURN SEMI .)


state 37

    (71) expression_list -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            reduce using rule 71 (expression_list -> expression .)
    COMMA           reduce using rule 71 (expression_list -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 38

    (56) expression -> MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 82

state 39

    (50) expression -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 83

state 40

    (51) expression -> INT .

    PLUS            reduce using rule 51 (expression -> INT .)
    MINUS           reduce using rule 51 (expression -> INT .)
    STAR            reduce using rule 51 (expression -> INT .)
    SLASH           reduce using rule 51 (expression -> INT .)
    LT              reduce using rule 51 (expression -> INT .)
    LE              reduce using rule 51 (expression -> INT .)
    GT              reduce using rule 51 (expression -> INT .)
    GE              reduce using rule 51 (expression -> INT .)
    EQEQ            reduce using rule 51 (expression -> INT .)
    NOTEQ           reduce using rule 51 (expression -> INT .)
    AND             reduce using rule 51 (expression -> INT .)
    OR              reduce using rule 51 (expression -> INT .)
    SEMI            reduce using rule 51 (expression -> INT .)
    COMMA           reduce using rule 51 (expression -> INT .)
    RPAREN          reduce using rule 51 (expression -> INT .)
    RBRACKET        reduce using rule 51 (expression -> INT .)


state 41

    (52) expression -> DOUBLE .

    PLUS            reduce using rule 52 (expression -> DOUBLE .)
    MINUS           reduce using rule 52 (expression -> DOUBLE .)
    STAR            reduce using rule 52 (expression -> DOUBLE .)
    SLASH           reduce using rule 52 (expression -> DOUBLE .)
    LT              reduce using rule 52 (expression -> DOUBLE .)
    LE              reduce using rule 52 (expression -> DOUBLE .)
    GT              reduce using rule 52 (expression -> DOUBLE .)
    GE              reduce using rule 52 (expression -> DOUBLE .)
    EQEQ            reduce using rule 52 (expression -> DOUBLE .)
    NOTEQ           reduce using rule 52 (expression -> DOUBLE .)
    AND             reduce using rule 52 (expression -> DOUBLE .)
    OR              reduce using rule 52 (expression -> DOUBLE .)
    SEMI            reduce using rule 52 (expression -> DOUBLE .)
    COMMA           reduce using rule 52 (expression -> DOUBLE .)
    RPAREN          reduce using rule 52 (expression -> DOUBLE .)
    RBRACKET        reduce using rule 52 (expression -> DOUBLE .)


state 42

    (53) expression -> STRING .

    PLUS            reduce using rule 53 (expression -> STRING .)
    MINUS           reduce using rule 53 (expression -> STRING .)
    STAR            reduce using rule 53 (expression -> STRING .)
    SLASH           reduce using rule 53 (expression -> STRING .)
    LT              reduce using rule 53 (expression -> STRING .)
    LE              reduce using rule 53 (expression -> STRING .)
    GT              reduce using rule 53 (expression -> STRING .)
    GE              reduce using rule 53 (expression -> STRING .)
    EQEQ            reduce using rule 53 (expression -> STRING .)
    NOTEQ           reduce using rule 53 (expression -> STRING .)
    AND             reduce using rule 53 (expression -> STRING .)
    OR              reduce using rule 53 (expression -> STRING .)
    SEMI            reduce using rule 53 (expression -> STRING .)
    COMMA           reduce using rule 53 (expression -> STRING .)
    RPAREN          reduce using rule 53 (expression -> STRING .)
    RBRACKET        reduce using rule 53 (expression -> STRING .)


state 43

    (54) expression -> BOOL .

    PLUS            reduce using rule 54 (expression -> BOOL .)
    MINUS           reduce using rule 54 (expression -> BOOL .)
    STAR            reduce using rule 54 (expression -> BOOL .)
    SLASH           reduce using rule 54 (expression -> BOOL .)
    LT              reduce using rule 54 (expression -> BOOL .)
    LE              reduce using rule 54 (expression -> BOOL .)
    GT              reduce using rule 54 (expression -> BOOL .)
    GE              reduce using rule 54 (expression -> BOOL .)
    EQEQ            reduce using rule 54 (expression -> BOOL .)
    NOTEQ           reduce using rule 54 (expression -> BOOL .)
    AND             reduce using rule 54 (expression -> BOOL .)
    OR              reduce using rule 54 (expression -> BOOL .)
    SEMI            reduce using rule 54 (expression -> BOOL .)
    COMMA           reduce using rule 54 (expression -> BOOL .)
    RPAREN          reduce using rule 54 (expression -> BOOL .)
    RBRACKET        reduce using rule 54 (expression -> BOOL .)


state 44

    (55) expression -> NOT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 84

state 45

    (57) expression -> IDENT .
    (62) expression -> IDENT . LBRACKET expression RBRACKET
    (63) expression -> IDENT . LPAREN arglist RPAREN

    PLUS            reduce using rule 57 (expression -> IDENT .)
    MINUS           reduce using rule 57 (expression -> IDENT .)
    STAR            reduce using rule 57 (expression -> IDENT .)
    SLASH           reduce using rule 57 (expression -> IDENT .)
    LT              reduce using rule 57 (expression -> IDENT .)
    LE              reduce using rule 57 (expression -> IDENT .)
    GT              reduce using rule 57 (expression -> IDENT .)
    GE              reduce using rule 57 (expression -> IDENT .)
    EQEQ            reduce using rule 57 (expression -> IDENT .)
    NOTEQ           reduce using rule 57 (expression -> IDENT .)
    AND             reduce using rule 57 (expression -> IDENT .)
    OR              reduce using rule 57 (expression -> IDENT .)
    SEMI            reduce using rule 57 (expression -> IDENT .)
    COMMA           reduce using rule 57 (expression -> IDENT .)
    RPAREN          reduce using rule 57 (expression -> IDENT .)
    RBRACKET        reduce using rule 57 (expression -> IDENT .)
    LBRACKET        shift and go to state 85
    LPAREN          shift and go to state 86


state 46

    (58) expression -> LBRACKET . list_items RBRACKET
    (59) list_items -> . list_items COMMA expression
    (60) list_items -> . expression
    (61) list_items -> . empty
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN
    (77) empty -> .

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48
    RBRACKET        reduce using rule 77 (empty -> .)
    COMMA           reduce using rule 77 (empty -> .)

    list_items                     shift and go to state 87
    expression                     shift and go to state 88
    empty                          shift and go to state 89

state 47

    (64) expression -> STR . LPAREN expression RPAREN

    LPAREN          shift and go to state 90


state 48

    (65) expression -> INPUT . LPAREN RPAREN
    (66) expression -> INPUT . LPAREN expression RPAREN

    LPAREN          shift and go to state 91


state 49

    (6) statement -> WAX IDENT COLON . IDENT EQUAL expression SEMI

    IDENT           shift and go to state 92


state 50

    (37) statement -> WAX FUNCTION IDENT . COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE

    COLON           shift and go to state 93


state 51

    (7) statement -> IDENT EQUAL expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 94
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 52

    (8) statement -> IDENT PLUSEQ expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 95
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 53

    (9) statement -> IDENT MINUSEQ expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 96
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 54

    (10) statement -> IDENT STAREQ expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 97
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 55

    (11) statement -> IDENT SLASHEQ expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 98
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 56

    (12) statement -> IDENT PLUSPLUS SEMI .

    COMMENT_LINE    reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    COMMENT_BLOCK   reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    WAX             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    IDENT           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    PLUSPLUS        reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    MINUSMINUS      reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    IF              reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    FOR             reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    WHILE           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    PRINT           reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    RETURN          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    $end            reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)
    RBRACE          reduce using rule 12 (statement -> IDENT PLUSPLUS SEMI .)


state 57

    (13) statement -> IDENT MINUSMINUS SEMI .

    COMMENT_LINE    reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    COMMENT_BLOCK   reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    WAX             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    IDENT           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    PLUSPLUS        reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    MINUSMINUS      reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    IF              reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    FOR             reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    WHILE           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    PRINT           reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    RETURN          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    $end            reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)
    RBRACE          reduce using rule 13 (statement -> IDENT MINUSMINUS SEMI .)


state 58

    (17) statement -> IDENT DOT APPEND . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 99


state 59

    (18) statement -> IDENT DOT REMOVE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 100


state 60

    (14) statement -> PLUSPLUS IDENT SEMI .

    COMMENT_LINE    reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    COMMENT_BLOCK   reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    WAX             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    IDENT           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    PLUSPLUS        reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    MINUSMINUS      reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    IF              reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    FOR             reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    WHILE           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    PRINT           reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    RETURN          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    $end            reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)
    RBRACE          reduce using rule 14 (statement -> PLUSPLUS IDENT SEMI .)


state 61

    (15) statement -> MINUSMINUS IDENT SEMI .

    COMMENT_LINE    reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    COMMENT_BLOCK   reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    WAX             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    IDENT           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    PLUSPLUS        reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    MINUSMINUS      reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    IF              reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    FOR             reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    WHILE           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    PRINT           reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    RETURN          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    $end            reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)
    RBRACE          reduce using rule 15 (statement -> MINUSMINUS IDENT SEMI .)


state 62

    (16) statement -> ident_list EQUAL expression_list . SEMI
    (70) expression_list -> expression_list . COMMA expression

    SEMI            shift and go to state 101
    COMMA           shift and go to state 69


state 63

    (72) ident_list -> ident_list COMMA IDENT .

    EQUAL           reduce using rule 72 (ident_list -> ident_list COMMA IDENT .)
    COMMA           reduce using rule 72 (ident_list -> ident_list COMMA IDENT .)


state 64

    (19) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (20) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 65

    (21) statement -> FOR LPAREN WAX . IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 103


state 66

    (31) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 67

    (32) statement -> PRINT LPAREN expression . RPAREN SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 68

    (35) statement -> RETURN expression_list SEMI .

    COMMENT_LINE    reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    COMMENT_BLOCK   reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    WAX             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    IDENT           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    PLUSPLUS        reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    MINUSMINUS      reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    IF              reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    FOR             reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    WHILE           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    PRINT           reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    RETURN          reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    $end            reduce using rule 35 (statement -> RETURN expression_list SEMI .)
    RBRACE          reduce using rule 35 (statement -> RETURN expression_list SEMI .)


state 69

    (70) expression_list -> expression_list COMMA . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 106

state 70

    (38) expression -> expression PLUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 107

state 71

    (39) expression -> expression MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 108

state 72

    (40) expression -> expression STAR . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 109

state 73

    (41) expression -> expression SLASH . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 110

state 74

    (42) expression -> expression LT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 111

state 75

    (43) expression -> expression LE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 112

state 76

    (44) expression -> expression GT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 113

state 77

    (45) expression -> expression GE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 114

state 78

    (46) expression -> expression EQEQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 115

state 79

    (47) expression -> expression NOTEQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 116

state 80

    (48) expression -> expression AND . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 117

state 81

    (49) expression -> expression OR . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 118

state 82

    (56) expression -> MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    AND             reduce using rule 56 (expression -> MINUS expression .)
    OR              reduce using rule 56 (expression -> MINUS expression .)
    SEMI            reduce using rule 56 (expression -> MINUS expression .)
    COMMA           reduce using rule 56 (expression -> MINUS expression .)
    RPAREN          reduce using rule 56 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 56 (expression -> MINUS expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79

  ! PLUS            [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! STAR            [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! SLASH           [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! LT              [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! LE              [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! GT              [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! GE              [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! EQEQ            [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! NOTEQ           [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 83

    (50) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 84

    (55) expression -> NOT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    AND             reduce using rule 55 (expression -> NOT expression .)
    OR              reduce using rule 55 (expression -> NOT expression .)
    SEMI            reduce using rule 55 (expression -> NOT expression .)
    COMMA           reduce using rule 55 (expression -> NOT expression .)
    RPAREN          reduce using rule 55 (expression -> NOT expression .)
    RBRACKET        reduce using rule 55 (expression -> NOT expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79

  ! PLUS            [ reduce using rule 55 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> NOT expression .) ]
  ! STAR            [ reduce using rule 55 (expression -> NOT expression .) ]
  ! SLASH           [ reduce using rule 55 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! EQEQ            [ reduce using rule 55 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 55 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 85

    (62) expression -> IDENT LBRACKET . expression RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 120

state 86

    (63) expression -> IDENT LPAREN . arglist RPAREN
    (67) arglist -> . arglist COMMA expression
    (68) arglist -> . expression
    (69) arglist -> . empty
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN
    (77) empty -> .

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48
    RPAREN          reduce using rule 77 (empty -> .)
    COMMA           reduce using rule 77 (empty -> .)

    arglist                        shift and go to state 121
    expression                     shift and go to state 122
    empty                          shift and go to state 123

state 87

    (58) expression -> LBRACKET list_items . RBRACKET
    (59) list_items -> list_items . COMMA expression

    RBRACKET        shift and go to state 124
    COMMA           shift and go to state 125


state 88

    (60) list_items -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        reduce using rule 60 (list_items -> expression .)
    COMMA           reduce using rule 60 (list_items -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 89

    (61) list_items -> empty .

    RBRACKET        reduce using rule 61 (list_items -> empty .)
    COMMA           reduce using rule 61 (list_items -> empty .)


state 90

    (64) expression -> STR LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 126

state 91

    (65) expression -> INPUT LPAREN . RPAREN
    (66) expression -> INPUT LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    RPAREN          shift and go to state 127
    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 128

state 92

    (6) statement -> WAX IDENT COLON IDENT . EQUAL expression SEMI

    EQUAL           shift and go to state 129


state 93

    (37) statement -> WAX FUNCTION IDENT COLON . return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (33) return_type -> . IDENT
    (34) return_type -> . VOID

    IDENT           shift and go to state 130
    VOID            shift and go to state 132

    return_type                    shift and go to state 131

state 94

    (7) statement -> IDENT EQUAL expression SEMI .

    COMMENT_LINE    reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    COMMENT_BLOCK   reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    WAX             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    IDENT           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    PLUSPLUS        reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    MINUSMINUS      reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    IF              reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    FOR             reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    WHILE           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    PRINT           reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    RETURN          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    $end            reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)
    RBRACE          reduce using rule 7 (statement -> IDENT EQUAL expression SEMI .)


state 95

    (8) statement -> IDENT PLUSEQ expression SEMI .

    COMMENT_LINE    reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    WAX             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    IDENT           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    PLUSPLUS        reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    MINUSMINUS      reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    IF              reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    FOR             reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    WHILE           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    PRINT           reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    RETURN          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    $end            reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)
    RBRACE          reduce using rule 8 (statement -> IDENT PLUSEQ expression SEMI .)


state 96

    (9) statement -> IDENT MINUSEQ expression SEMI .

    COMMENT_LINE    reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    WAX             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    IDENT           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    PLUSPLUS        reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    MINUSMINUS      reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    IF              reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    FOR             reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    WHILE           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    PRINT           reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    RETURN          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    $end            reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)
    RBRACE          reduce using rule 9 (statement -> IDENT MINUSEQ expression SEMI .)


state 97

    (10) statement -> IDENT STAREQ expression SEMI .

    COMMENT_LINE    reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    WAX             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    IDENT           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    PLUSPLUS        reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    MINUSMINUS      reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    IF              reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    FOR             reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    WHILE           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    PRINT           reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    RETURN          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    $end            reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)
    RBRACE          reduce using rule 10 (statement -> IDENT STAREQ expression SEMI .)


state 98

    (11) statement -> IDENT SLASHEQ expression SEMI .

    COMMENT_LINE    reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    COMMENT_BLOCK   reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    WAX             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    IDENT           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    PLUSPLUS        reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    MINUSMINUS      reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    IF              reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    FOR             reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    WHILE           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    PRINT           reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    RETURN          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    $end            reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)
    RBRACE          reduce using rule 11 (statement -> IDENT SLASHEQ expression SEMI .)


state 99

    (17) statement -> IDENT DOT APPEND LPAREN . expression RPAREN SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 133

state 100

    (18) statement -> IDENT DOT REMOVE LPAREN . expression RPAREN SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 134

state 101

    (16) statement -> ident_list EQUAL expression_list SEMI .

    COMMENT_LINE    reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    COMMENT_BLOCK   reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    WAX             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    IDENT           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    PLUSPLUS        reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    MINUSMINUS      reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    IF              reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    FOR             reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    WHILE           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    PRINT           reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    RETURN          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    $end            reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)
    RBRACE          reduce using rule 16 (statement -> ident_list EQUAL expression_list SEMI .)


state 102

    (19) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (20) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 135


state 103

    (21) statement -> FOR LPAREN WAX IDENT . COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    COLON           shift and go to state 136


state 104

    (31) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 137


state 105

    (32) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 138


state 106

    (70) expression_list -> expression_list COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            reduce using rule 70 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 70 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 107

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 38 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 38 (expression -> expression PLUS expression .)
    LT              reduce using rule 38 (expression -> expression PLUS expression .)
    LE              reduce using rule 38 (expression -> expression PLUS expression .)
    GT              reduce using rule 38 (expression -> expression PLUS expression .)
    GE              reduce using rule 38 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 38 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 38 (expression -> expression PLUS expression .)
    AND             reduce using rule 38 (expression -> expression PLUS expression .)
    OR              reduce using rule 38 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 38 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 38 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression PLUS expression .)
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! STAR            [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! SLASH           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 108

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 39 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MINUS expression .)
    LT              reduce using rule 39 (expression -> expression MINUS expression .)
    LE              reduce using rule 39 (expression -> expression MINUS expression .)
    GT              reduce using rule 39 (expression -> expression MINUS expression .)
    GE              reduce using rule 39 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 39 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 39 (expression -> expression MINUS expression .)
    AND             reduce using rule 39 (expression -> expression MINUS expression .)
    OR              reduce using rule 39 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 39 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression MINUS expression .)
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! STAR            [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! SLASH           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 109

    (40) expression -> expression STAR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 40 (expression -> expression STAR expression .)
    MINUS           reduce using rule 40 (expression -> expression STAR expression .)
    STAR            reduce using rule 40 (expression -> expression STAR expression .)
    SLASH           reduce using rule 40 (expression -> expression STAR expression .)
    LT              reduce using rule 40 (expression -> expression STAR expression .)
    LE              reduce using rule 40 (expression -> expression STAR expression .)
    GT              reduce using rule 40 (expression -> expression STAR expression .)
    GE              reduce using rule 40 (expression -> expression STAR expression .)
    EQEQ            reduce using rule 40 (expression -> expression STAR expression .)
    NOTEQ           reduce using rule 40 (expression -> expression STAR expression .)
    AND             reduce using rule 40 (expression -> expression STAR expression .)
    OR              reduce using rule 40 (expression -> expression STAR expression .)
    SEMI            reduce using rule 40 (expression -> expression STAR expression .)
    COMMA           reduce using rule 40 (expression -> expression STAR expression .)
    RPAREN          reduce using rule 40 (expression -> expression STAR expression .)
    RBRACKET        reduce using rule 40 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! STAR            [ shift and go to state 72 ]
  ! SLASH           [ shift and go to state 73 ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 110

    (41) expression -> expression SLASH expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 41 (expression -> expression SLASH expression .)
    MINUS           reduce using rule 41 (expression -> expression SLASH expression .)
    STAR            reduce using rule 41 (expression -> expression SLASH expression .)
    SLASH           reduce using rule 41 (expression -> expression SLASH expression .)
    LT              reduce using rule 41 (expression -> expression SLASH expression .)
    LE              reduce using rule 41 (expression -> expression SLASH expression .)
    GT              reduce using rule 41 (expression -> expression SLASH expression .)
    GE              reduce using rule 41 (expression -> expression SLASH expression .)
    EQEQ            reduce using rule 41 (expression -> expression SLASH expression .)
    NOTEQ           reduce using rule 41 (expression -> expression SLASH expression .)
    AND             reduce using rule 41 (expression -> expression SLASH expression .)
    OR              reduce using rule 41 (expression -> expression SLASH expression .)
    SEMI            reduce using rule 41 (expression -> expression SLASH expression .)
    COMMA           reduce using rule 41 (expression -> expression SLASH expression .)
    RPAREN          reduce using rule 41 (expression -> expression SLASH expression .)
    RBRACKET        reduce using rule 41 (expression -> expression SLASH expression .)

  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! STAR            [ shift and go to state 72 ]
  ! SLASH           [ shift and go to state 73 ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 111

    (42) expression -> expression LT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 42 (expression -> expression LT expression .)
    LE              reduce using rule 42 (expression -> expression LT expression .)
    GT              reduce using rule 42 (expression -> expression LT expression .)
    GE              reduce using rule 42 (expression -> expression LT expression .)
    EQEQ            reduce using rule 42 (expression -> expression LT expression .)
    NOTEQ           reduce using rule 42 (expression -> expression LT expression .)
    AND             reduce using rule 42 (expression -> expression LT expression .)
    OR              reduce using rule 42 (expression -> expression LT expression .)
    SEMI            reduce using rule 42 (expression -> expression LT expression .)
    COMMA           reduce using rule 42 (expression -> expression LT expression .)
    RPAREN          reduce using rule 42 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 42 (expression -> expression LT expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! STAR            [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! SLASH           [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 112

    (43) expression -> expression LE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 43 (expression -> expression LE expression .)
    LE              reduce using rule 43 (expression -> expression LE expression .)
    GT              reduce using rule 43 (expression -> expression LE expression .)
    GE              reduce using rule 43 (expression -> expression LE expression .)
    EQEQ            reduce using rule 43 (expression -> expression LE expression .)
    NOTEQ           reduce using rule 43 (expression -> expression LE expression .)
    AND             reduce using rule 43 (expression -> expression LE expression .)
    OR              reduce using rule 43 (expression -> expression LE expression .)
    SEMI            reduce using rule 43 (expression -> expression LE expression .)
    COMMA           reduce using rule 43 (expression -> expression LE expression .)
    RPAREN          reduce using rule 43 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 43 (expression -> expression LE expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! STAR            [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! SLASH           [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 113

    (44) expression -> expression GT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 44 (expression -> expression GT expression .)
    LE              reduce using rule 44 (expression -> expression GT expression .)
    GT              reduce using rule 44 (expression -> expression GT expression .)
    GE              reduce using rule 44 (expression -> expression GT expression .)
    EQEQ            reduce using rule 44 (expression -> expression GT expression .)
    NOTEQ           reduce using rule 44 (expression -> expression GT expression .)
    AND             reduce using rule 44 (expression -> expression GT expression .)
    OR              reduce using rule 44 (expression -> expression GT expression .)
    SEMI            reduce using rule 44 (expression -> expression GT expression .)
    COMMA           reduce using rule 44 (expression -> expression GT expression .)
    RPAREN          reduce using rule 44 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 44 (expression -> expression GT expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 44 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression GT expression .) ]
  ! STAR            [ reduce using rule 44 (expression -> expression GT expression .) ]
  ! SLASH           [ reduce using rule 44 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 114

    (45) expression -> expression GE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 45 (expression -> expression GE expression .)
    LE              reduce using rule 45 (expression -> expression GE expression .)
    GT              reduce using rule 45 (expression -> expression GE expression .)
    GE              reduce using rule 45 (expression -> expression GE expression .)
    EQEQ            reduce using rule 45 (expression -> expression GE expression .)
    NOTEQ           reduce using rule 45 (expression -> expression GE expression .)
    AND             reduce using rule 45 (expression -> expression GE expression .)
    OR              reduce using rule 45 (expression -> expression GE expression .)
    SEMI            reduce using rule 45 (expression -> expression GE expression .)
    COMMA           reduce using rule 45 (expression -> expression GE expression .)
    RPAREN          reduce using rule 45 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 45 (expression -> expression GE expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! STAR            [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! SLASH           [ reduce using rule 45 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 115

    (46) expression -> expression EQEQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 46 (expression -> expression EQEQ expression .)
    LE              reduce using rule 46 (expression -> expression EQEQ expression .)
    GT              reduce using rule 46 (expression -> expression EQEQ expression .)
    GE              reduce using rule 46 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 46 (expression -> expression EQEQ expression .)
    NOTEQ           reduce using rule 46 (expression -> expression EQEQ expression .)
    AND             reduce using rule 46 (expression -> expression EQEQ expression .)
    OR              reduce using rule 46 (expression -> expression EQEQ expression .)
    SEMI            reduce using rule 46 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 46 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQEQ expression .)
    RBRACKET        reduce using rule 46 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! STAR            [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! SLASH           [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 116

    (47) expression -> expression NOTEQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LT              reduce using rule 47 (expression -> expression NOTEQ expression .)
    LE              reduce using rule 47 (expression -> expression NOTEQ expression .)
    GT              reduce using rule 47 (expression -> expression NOTEQ expression .)
    GE              reduce using rule 47 (expression -> expression NOTEQ expression .)
    EQEQ            reduce using rule 47 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 47 (expression -> expression NOTEQ expression .)
    AND             reduce using rule 47 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 47 (expression -> expression NOTEQ expression .)
    SEMI            reduce using rule 47 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 47 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression NOTEQ expression .)
    RBRACKET        reduce using rule 47 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73

  ! PLUS            [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! STAR            [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! SLASH           [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! LT              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! EQEQ            [ shift and go to state 78 ]
  ! NOTEQ           [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 117

    (48) expression -> expression AND expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    AND             reduce using rule 48 (expression -> expression AND expression .)
    OR              reduce using rule 48 (expression -> expression AND expression .)
    SEMI            reduce using rule 48 (expression -> expression AND expression .)
    COMMA           reduce using rule 48 (expression -> expression AND expression .)
    RPAREN          reduce using rule 48 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 48 (expression -> expression AND expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79

  ! PLUS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! STAR            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! SLASH           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! EQEQ            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]


state 118

    (49) expression -> expression OR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    OR              reduce using rule 49 (expression -> expression OR expression .)
    SEMI            reduce using rule 49 (expression -> expression OR expression .)
    COMMA           reduce using rule 49 (expression -> expression OR expression .)
    RPAREN          reduce using rule 49 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 49 (expression -> expression OR expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80

  ! PLUS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! STAR            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! SLASH           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 81 ]


state 119

    (50) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    STAR            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 120

    (62) expression -> IDENT LBRACKET expression . RBRACKET
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        shift and go to state 139
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 121

    (63) expression -> IDENT LPAREN arglist . RPAREN
    (67) arglist -> arglist . COMMA expression

    RPAREN          shift and go to state 140
    COMMA           shift and go to state 141


state 122

    (68) arglist -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 68 (arglist -> expression .)
    COMMA           reduce using rule 68 (arglist -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 123

    (69) arglist -> empty .

    RPAREN          reduce using rule 69 (arglist -> empty .)
    COMMA           reduce using rule 69 (arglist -> empty .)


state 124

    (58) expression -> LBRACKET list_items RBRACKET .

    PLUS            reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    MINUS           reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    STAR            reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    SLASH           reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    LT              reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    LE              reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    GT              reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    GE              reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    EQEQ            reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    NOTEQ           reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    AND             reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    OR              reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    SEMI            reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    COMMA           reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    RPAREN          reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)
    RBRACKET        reduce using rule 58 (expression -> LBRACKET list_items RBRACKET .)


state 125

    (59) list_items -> list_items COMMA . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 142

state 126

    (64) expression -> STR LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 143
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 127

    (65) expression -> INPUT LPAREN RPAREN .

    PLUS            reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    MINUS           reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    STAR            reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    SLASH           reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    LT              reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    LE              reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    GT              reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    GE              reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    EQEQ            reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    NOTEQ           reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    AND             reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    OR              reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    SEMI            reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    COMMA           reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    RPAREN          reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (expression -> INPUT LPAREN RPAREN .)


state 128

    (66) expression -> INPUT LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 144
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 129

    (6) statement -> WAX IDENT COLON IDENT EQUAL . expression SEMI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 145

state 130

    (33) return_type -> IDENT .

    LPAREN          reduce using rule 33 (return_type -> IDENT .)


state 131

    (37) statement -> WAX FUNCTION IDENT COLON return_type . LPAREN paramlist RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 146


state 132

    (34) return_type -> VOID .

    LPAREN          reduce using rule 34 (return_type -> VOID .)


state 133

    (17) statement -> IDENT DOT APPEND LPAREN expression . RPAREN SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 147
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 134

    (18) statement -> IDENT DOT REMOVE LPAREN expression . RPAREN SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 148
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 135

    (19) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (20) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    RBRACE          reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 149
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 136

    (21) statement -> FOR LPAREN WAX IDENT COLON . IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    IDENT           shift and go to state 150


state 137

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    RBRACE          reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 151
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 138

    (32) statement -> PRINT LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 32 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 139

    (62) expression -> IDENT LBRACKET expression RBRACKET .

    PLUS            reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    STAR            reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    SLASH           reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    LT              reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    LE              reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    GT              reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    GE              reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    EQEQ            reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    NOTEQ           reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    AND             reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    OR              reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 62 (expression -> IDENT LBRACKET expression RBRACKET .)


state 140

    (63) expression -> IDENT LPAREN arglist RPAREN .

    PLUS            reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    MINUS           reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    STAR            reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    SLASH           reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    LT              reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    LE              reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    GT              reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    GE              reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    EQEQ            reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    NOTEQ           reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    AND             reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    OR              reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    SEMI            reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    COMMA           reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)
    RBRACKET        reduce using rule 63 (expression -> IDENT LPAREN arglist RPAREN .)


state 141

    (67) arglist -> arglist COMMA . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 152

state 142

    (59) list_items -> list_items COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        reduce using rule 59 (list_items -> list_items COMMA expression .)
    COMMA           reduce using rule 59 (list_items -> list_items COMMA expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 143

    (64) expression -> STR LPAREN expression RPAREN .

    PLUS            reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    MINUS           reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    STAR            reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    SLASH           reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    LT              reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    LE              reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    GT              reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    GE              reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    EQEQ            reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    AND             reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    OR              reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    SEMI            reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    COMMA           reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 64 (expression -> STR LPAREN expression RPAREN .)


state 144

    (66) expression -> INPUT LPAREN expression RPAREN .

    PLUS            reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    MINUS           reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    STAR            reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    SLASH           reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    LT              reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    LE              reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    GT              reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    GE              reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    EQEQ            reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    AND             reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    OR              reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    SEMI            reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    COMMA           reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 66 (expression -> INPUT LPAREN expression RPAREN .)


state 145

    (6) statement -> WAX IDENT COLON IDENT EQUAL expression . SEMI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 153
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 146

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN . paramlist RPAREN LBRACE program RBRACE
    (74) paramlist -> . paramlist COMMA IDENT COLON IDENT
    (75) paramlist -> . IDENT COLON IDENT
    (76) paramlist -> . empty
    (77) empty -> .

    IDENT           shift and go to state 154
    RPAREN          reduce using rule 77 (empty -> .)
    COMMA           reduce using rule 77 (empty -> .)

    paramlist                      shift and go to state 155
    empty                          shift and go to state 156

state 147

    (17) statement -> IDENT DOT APPEND LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 157


state 148

    (18) statement -> IDENT DOT REMOVE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 158


state 149

    (19) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (20) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    RBRACE          shift and go to state 159
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 150

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT . EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE

    EQUAL           shift and go to state 160


state 151

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    RBRACE          shift and go to state 161
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 152

    (67) arglist -> arglist COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 67 (arglist -> arglist COMMA expression .)
    COMMA           reduce using rule 67 (arglist -> arglist COMMA expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 153

    (6) statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .

    COMMENT_LINE    reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    COMMENT_BLOCK   reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    WAX             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    IDENT           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    PLUSPLUS        reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    MINUSMINUS      reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    IF              reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    FOR             reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    WHILE           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    PRINT           reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    RETURN          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    $end            reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)
    RBRACE          reduce using rule 6 (statement -> WAX IDENT COLON IDENT EQUAL expression SEMI .)


state 154

    (75) paramlist -> IDENT . COLON IDENT

    COLON           shift and go to state 162


state 155

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist . RPAREN LBRACE program RBRACE
    (74) paramlist -> paramlist . COMMA IDENT COLON IDENT

    RPAREN          shift and go to state 163
    COMMA           shift and go to state 164


state 156

    (76) paramlist -> empty .

    RPAREN          reduce using rule 76 (paramlist -> empty .)
    COMMA           reduce using rule 76 (paramlist -> empty .)


state 157

    (17) statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 17 (statement -> IDENT DOT APPEND LPAREN expression RPAREN SEMI .)


state 158

    (18) statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .

    COMMENT_LINE    reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    COMMENT_BLOCK   reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    WAX             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 18 (statement -> IDENT DOT REMOVE LPAREN expression RPAREN SEMI .)


state 159

    (19) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    COMMENT_LINE    reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 19 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 165


state 160

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL . expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 166

state 161

    (31) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 31 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 162

    (75) paramlist -> IDENT COLON . IDENT

    IDENT           shift and go to state 167


state 163

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 168


state 164

    (74) paramlist -> paramlist COMMA . IDENT COLON IDENT

    IDENT           shift and go to state 169


state 165

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 170


state 166

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression . SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 171
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 167

    (75) paramlist -> IDENT COLON IDENT .

    RPAREN          reduce using rule 75 (paramlist -> IDENT COLON IDENT .)
    COMMA           reduce using rule 75 (paramlist -> IDENT COLON IDENT .)


state 168

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    RBRACE          reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 172
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 169

    (74) paramlist -> paramlist COMMA IDENT . COLON IDENT

    COLON           shift and go to state 173


state 170

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    RBRACE          reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 174
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 171

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI . expression SEMI for_increment RPAREN LBRACE program RBRACE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 175

state 172

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    RBRACE          shift and go to state 176
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 173

    (74) paramlist -> paramlist COMMA IDENT COLON . IDENT

    IDENT           shift and go to state 177


state 174

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    RBRACE          shift and go to state 178
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 175

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression . SEMI for_increment RPAREN LBRACE program RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMI            shift and go to state 179
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 176

    (37) statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 37 (statement -> WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE .)


state 177

    (74) paramlist -> paramlist COMMA IDENT COLON IDENT .

    RPAREN          reduce using rule 74 (paramlist -> paramlist COMMA IDENT COLON IDENT .)
    COMMA           reduce using rule 74 (paramlist -> paramlist COMMA IDENT COLON IDENT .)


state 178

    (20) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WAX             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IDENT           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FOR             reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PRINT           reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 20 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)


state 179

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI . for_increment RPAREN LBRACE program RBRACE
    (22) for_increment -> . IDENT PLUSPLUS
    (23) for_increment -> . IDENT MINUSMINUS
    (24) for_increment -> . PLUSPLUS IDENT
    (25) for_increment -> . MINUSMINUS IDENT
    (26) for_increment -> . IDENT PLUSEQ expression
    (27) for_increment -> . IDENT MINUSEQ expression
    (28) for_increment -> . IDENT STAREQ expression
    (29) for_increment -> . IDENT SLASHEQ expression
    (30) for_increment -> . IDENT EQUAL expression

    IDENT           shift and go to state 180
    PLUSPLUS        shift and go to state 182
    MINUSMINUS      shift and go to state 183

    for_increment                  shift and go to state 181

state 180

    (22) for_increment -> IDENT . PLUSPLUS
    (23) for_increment -> IDENT . MINUSMINUS
    (26) for_increment -> IDENT . PLUSEQ expression
    (27) for_increment -> IDENT . MINUSEQ expression
    (28) for_increment -> IDENT . STAREQ expression
    (29) for_increment -> IDENT . SLASHEQ expression
    (30) for_increment -> IDENT . EQUAL expression

    PLUSPLUS        shift and go to state 184
    MINUSMINUS      shift and go to state 185
    PLUSEQ          shift and go to state 186
    MINUSEQ         shift and go to state 187
    STAREQ          shift and go to state 188
    SLASHEQ         shift and go to state 189
    EQUAL           shift and go to state 190


state 181

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 191


state 182

    (24) for_increment -> PLUSPLUS . IDENT

    IDENT           shift and go to state 192


state 183

    (25) for_increment -> MINUSMINUS . IDENT

    IDENT           shift and go to state 193


state 184

    (22) for_increment -> IDENT PLUSPLUS .

    RPAREN          reduce using rule 22 (for_increment -> IDENT PLUSPLUS .)


state 185

    (23) for_increment -> IDENT MINUSMINUS .

    RPAREN          reduce using rule 23 (for_increment -> IDENT MINUSMINUS .)


state 186

    (26) for_increment -> IDENT PLUSEQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 194

state 187

    (27) for_increment -> IDENT MINUSEQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 195

state 188

    (28) for_increment -> IDENT STAREQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 196

state 189

    (29) for_increment -> IDENT SLASHEQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 197

state 190

    (30) for_increment -> IDENT EQUAL . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression STAR expression
    (41) expression -> . expression SLASH expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression GE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . INT
    (52) expression -> . DOUBLE
    (53) expression -> . STRING
    (54) expression -> . BOOL
    (55) expression -> . NOT expression
    (56) expression -> . MINUS expression
    (57) expression -> . IDENT
    (58) expression -> . LBRACKET list_items RBRACKET
    (62) expression -> . IDENT LBRACKET expression RBRACKET
    (63) expression -> . IDENT LPAREN arglist RPAREN
    (64) expression -> . STR LPAREN expression RPAREN
    (65) expression -> . INPUT LPAREN RPAREN
    (66) expression -> . INPUT LPAREN expression RPAREN

    LPAREN          shift and go to state 39
    INT             shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43
    NOT             shift and go to state 44
    MINUS           shift and go to state 38
    IDENT           shift and go to state 45
    LBRACKET        shift and go to state 46
    STR             shift and go to state 47
    INPUT           shift and go to state 48

    expression                     shift and go to state 198

state 191

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 199


state 192

    (24) for_increment -> PLUSPLUS IDENT .

    RPAREN          reduce using rule 24 (for_increment -> PLUSPLUS IDENT .)


state 193

    (25) for_increment -> MINUSMINUS IDENT .

    RPAREN          reduce using rule 25 (for_increment -> MINUSMINUS IDENT .)


state 194

    (26) for_increment -> IDENT PLUSEQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 26 (for_increment -> IDENT PLUSEQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 195

    (27) for_increment -> IDENT MINUSEQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 27 (for_increment -> IDENT MINUSEQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 196

    (28) for_increment -> IDENT STAREQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 28 (for_increment -> IDENT STAREQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 197

    (29) for_increment -> IDENT SLASHEQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 29 (for_increment -> IDENT SLASHEQ expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 198

    (30) for_increment -> IDENT EQUAL expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . STAR expression
    (41) expression -> expression . SLASH expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . GE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 30 (for_increment -> IDENT EQUAL expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    STAR            shift and go to state 72
    SLASH           shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81


state 199

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (77) empty -> .
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for WAX resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    RBRACE          reduce using rule 77 (empty -> .)

  ! COMMENT_LINE    [ reduce using rule 77 (empty -> .) ]
  ! COMMENT_BLOCK   [ reduce using rule 77 (empty -> .) ]
  ! WAX             [ reduce using rule 77 (empty -> .) ]
  ! IDENT           [ reduce using rule 77 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 77 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 77 (empty -> .) ]
  ! IF              [ reduce using rule 77 (empty -> .) ]
  ! FOR             [ reduce using rule 77 (empty -> .) ]
  ! WHILE           [ reduce using rule 77 (empty -> .) ]
  ! PRINT           [ reduce using rule 77 (empty -> .) ]
  ! RETURN          [ reduce using rule 77 (empty -> .) ]

    program                        shift and go to state 200
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    ident_list                     shift and go to state 10

state 200

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . COMMENT_LINE
    (5) statement -> . COMMENT_BLOCK
    (6) statement -> . WAX IDENT COLON IDENT EQUAL expression SEMI
    (7) statement -> . IDENT EQUAL expression SEMI
    (8) statement -> . IDENT PLUSEQ expression SEMI
    (9) statement -> . IDENT MINUSEQ expression SEMI
    (10) statement -> . IDENT STAREQ expression SEMI
    (11) statement -> . IDENT SLASHEQ expression SEMI
    (12) statement -> . IDENT PLUSPLUS SEMI
    (13) statement -> . IDENT MINUSMINUS SEMI
    (14) statement -> . PLUSPLUS IDENT SEMI
    (15) statement -> . MINUSMINUS IDENT SEMI
    (16) statement -> . ident_list EQUAL expression_list SEMI
    (17) statement -> . IDENT DOT APPEND LPAREN expression RPAREN SEMI
    (18) statement -> . IDENT DOT REMOVE LPAREN expression RPAREN SEMI
    (19) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (20) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (21) statement -> . FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE
    (31) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (32) statement -> . PRINT LPAREN expression RPAREN SEMI
    (35) statement -> . RETURN expression_list SEMI
    (36) statement -> . RETURN SEMI
    (37) statement -> . WAX FUNCTION IDENT COLON return_type LPAREN paramlist RPAREN LBRACE program RBRACE
    (72) ident_list -> . ident_list COMMA IDENT
    (73) ident_list -> . IDENT

    RBRACE          shift and go to state 201
    COMMENT_LINE    shift and go to state 4
    COMMENT_BLOCK   shift and go to state 5
    WAX             shift and go to state 6
    IDENT           shift and go to state 7
    PLUSPLUS        shift and go to state 8
    MINUSMINUS      shift and go to state 9
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15

    statement                      shift and go to state 16
    ident_list                     shift and go to state 10

state 201

    (21) statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .

    COMMENT_LINE    reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    COMMENT_BLOCK   reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    WAX             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    IDENT           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    PLUSPLUS        reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    MINUSMINUS      reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 21 (statement -> FOR LPAREN WAX IDENT COLON IDENT EQUAL expression SEMI expression SEMI for_increment RPAREN LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT_LINE in state 0 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 0 resolved as shift
WARNING: shift/reduce conflict for WAX in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 0 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 7 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 135 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 135 resolved as shift
WARNING: shift/reduce conflict for WAX in state 135 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for IF in state 135 resolved as shift
WARNING: shift/reduce conflict for FOR in state 135 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 135 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 135 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 135 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 137 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 137 resolved as shift
WARNING: shift/reduce conflict for WAX in state 137 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 137 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 137 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 137 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 168 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 168 resolved as shift
WARNING: shift/reduce conflict for WAX in state 168 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for IF in state 168 resolved as shift
WARNING: shift/reduce conflict for FOR in state 168 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 168 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 168 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 168 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 170 resolved as shift
WARNING: shift/reduce conflict for WAX in state 170 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 170 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 199 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 199 resolved as shift
WARNING: shift/reduce conflict for WAX in state 199 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 199 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 199 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
